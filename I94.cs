//
// File generated by HDevelop for HALCON/.NET (C#) Version 18.11.0.0
// Non-ASCII strings in this file are encoded in local-8-bit encoding (cp936).
// 
// Please note that non-ASCII characters in string constants are exported
// as octal codes in order to guarantee that the strings are correctly
// created on all systems, independent on any compiler settings.
// 
// Source files with different encoding should not be mixed in one project.
//
//  This file is intended to be used with the HDevelopTemplate or
//  HDevelopTemplateWPF projects located under %HALCONEXAMPLES%\c#

using System;
using HalconDotNet;

public partial class HDevelopExport
{
  public HTuple hv_ExpDefaultWinHandle;

  // Procedures 
  // Local procedures 
  public void _pinPointFindLine (HObject ho_inputImage, out HObject ho_findLineRegion, 
      HTuple hv_lineX1, HTuple hv_lineX2, HTuple hv_lineY1, HTuple hv_lineY2, HTuple hv_radian, 
      HTuple hv_newWidth, HTuple hv_EdgesOnly, out HTuple hv_RowBegin, out HTuple hv_ColBegin, 
      out HTuple hv_RowEnd, out HTuple hv_ColEnd, out HTuple hv_EdgesX, out HTuple hv_EdgesY)
  {




    // Local iconic variables 

    HObject ho_ImageReduced, ho_Edges;

    // Local control variables 

    HTuple hv_lineCenterX = new HTuple(), hv_lineCenterY = new HTuple();
    HTuple hv_Phi = new HTuple(), hv_xDirOld = new HTuple();
    HTuple hv_yDirOld = new HTuple(), hv_xDirNew = new HTuple();
    HTuple hv_yDirNew = new HTuple(), hv_newRadian = new HTuple();
    HTuple hv_newHeight = new HTuple(), hv_Nr = new HTuple();
    HTuple hv_Nc = new HTuple(), hv_Dist = new HTuple(), hv_Indices = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    hv_RowBegin = new HTuple();
    hv_ColBegin = new HTuple();
    hv_RowEnd = new HTuple();
    hv_ColEnd = new HTuple();
    hv_EdgesX = new HTuple();
    hv_EdgesY = new HTuple();
    hv_lineCenterX.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineCenterX = (hv_lineX1+hv_lineX2)/2.0;
    }
    hv_lineCenterY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineCenterY = (hv_lineY1+hv_lineY2)/2.0;
    }
    hv_Phi.Dispose();
    HOperatorSet.LineOrientation(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_Phi);
    hv_xDirOld.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDirOld = hv_radian.TupleCos()
        ;
    }
    hv_yDirOld.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDirOld = hv_radian.TupleSin()
        ;
    }

    hv_xDirNew.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDirNew = ((hv_Phi+((new HTuple(90)).TupleRad()
        ))).TupleCos();
    }
    hv_yDirNew.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDirNew = ((hv_Phi+((new HTuple(90)).TupleRad()
        ))).TupleSin();
    }

    if ((int)(new HTuple((((hv_xDirOld*hv_xDirNew)+(hv_yDirOld*hv_yDirNew))).TupleLess(
        0))) != 0)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_yDirNew = -hv_yDirNew;
      hv_yDirNew.Dispose();
      hv_yDirNew = ExpTmpLocalVar_yDirNew;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_xDirNew = -hv_xDirNew;
      hv_xDirNew.Dispose();
      hv_xDirNew = ExpTmpLocalVar_xDirNew;
      }
      }
    }

    hv_newRadian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_newRadian = hv_yDirNew.TupleAtan2(
        hv_xDirNew);
    }

    hv_newHeight.Dispose();
    HOperatorSet.DistancePp(hv_lineY1, hv_lineX1, hv_lineY2, hv_lineX2, out hv_newHeight);

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_findLineRegion.Dispose();
    HOperatorSet.GenRectangle2(out ho_findLineRegion, hv_lineCenterY, hv_lineCenterX, 
        hv_newRadian, hv_newWidth, hv_newHeight/2);
    }
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_inputImage, ho_findLineRegion, out ho_ImageReduced
        );
    ho_Edges.Dispose();
    HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges, "canny", 5, 30, 60);

    if ((int)(new HTuple(hv_EdgesOnly.TupleEqual("true"))) != 0)
    {
      hv_EdgesY.Dispose();hv_EdgesX.Dispose();
      HOperatorSet.GetContourXld(ho_Edges, out hv_EdgesY, out hv_EdgesX);
      ho_ImageReduced.Dispose();
      ho_Edges.Dispose();

      hv_lineCenterX.Dispose();
      hv_lineCenterY.Dispose();
      hv_Phi.Dispose();
      hv_xDirOld.Dispose();
      hv_yDirOld.Dispose();
      hv_xDirNew.Dispose();
      hv_yDirNew.Dispose();
      hv_newRadian.Dispose();
      hv_newHeight.Dispose();
      hv_Nr.Dispose();
      hv_Nc.Dispose();
      hv_Dist.Dispose();
      hv_Indices.Dispose();

      return;
    }

    hv_RowBegin.Dispose();hv_ColBegin.Dispose();hv_RowEnd.Dispose();hv_ColEnd.Dispose();hv_Nr.Dispose();hv_Nc.Dispose();hv_Dist.Dispose();
    HOperatorSet.FitLineContourXld(ho_Edges, "tukey", -1, 0, 5, 2, out hv_RowBegin, 
        out hv_ColBegin, out hv_RowEnd, out hv_ColEnd, out hv_Nr, out hv_Nc, out hv_Dist);

    if ((int)(new HTuple((new HTuple(hv_Dist.TupleLength())).TupleGreater(1))) != 0)
    {
      hv_Indices.Dispose();
      HOperatorSet.TupleSortIndex(hv_Dist, out hv_Indices);
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowBegin = hv_RowBegin.TupleSelect(
          1);
      hv_RowBegin.Dispose();
      hv_RowBegin = ExpTmpLocalVar_RowBegin;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColBegin = hv_ColBegin.TupleSelect(
          1);
      hv_ColBegin.Dispose();
      hv_ColBegin = ExpTmpLocalVar_ColBegin;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_RowEnd = hv_RowEnd.TupleSelect(
          1);
      hv_RowEnd.Dispose();
      hv_RowEnd = ExpTmpLocalVar_RowEnd;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_ColEnd = hv_ColEnd.TupleSelect(
          1);
      hv_ColEnd.Dispose();
      hv_ColEnd = ExpTmpLocalVar_ColEnd;
      }
      }
    }
    ho_ImageReduced.Dispose();
    ho_Edges.Dispose();

    hv_lineCenterX.Dispose();
    hv_lineCenterY.Dispose();
    hv_Phi.Dispose();
    hv_xDirOld.Dispose();
    hv_yDirOld.Dispose();
    hv_xDirNew.Dispose();
    hv_yDirNew.Dispose();
    hv_newRadian.Dispose();
    hv_newHeight.Dispose();
    hv_Nr.Dispose();
    hv_Nc.Dispose();
    hv_Dist.Dispose();
    hv_Indices.Dispose();

    return;
  }

  public void AffineTransRect2 (HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_map, out HTuple hv_rowOut, out HTuple hv_colOut, out HTuple hv_radianOut, 
      out HTuple hv_len1Out, out HTuple hv_len2Out)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_topCenterCol = new HTuple(), hv_topCenterRow = new HTuple();
    HTuple hv_topCenterRowTrans = new HTuple(), hv_topCenterColTrans = new HTuple();
    HTuple hv_vecCol = new HTuple(), hv_vecRow = new HTuple();
    HTuple hv_epslon = new HTuple();
    // Initialize local and output iconic variables 
    hv_rowOut = new HTuple();
    hv_colOut = new HTuple();
    hv_radianOut = new HTuple();
    hv_len1Out = new HTuple();
    hv_len2Out = new HTuple();
    hv_rowOut.Dispose();hv_colOut.Dispose();
    HOperatorSet.AffineTransPoint2d(hv_map, hv_row, hv_col, out hv_rowOut, out hv_colOut);
    hv_len1Out.Dispose();
    hv_len1Out = new HTuple(hv_len1);
    hv_len2Out.Dispose();
    hv_len2Out = new HTuple(hv_len2);

    hv_topCenterCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_topCenterCol = hv_col+((hv_radian.TupleCos()
        )*hv_len1);
    }
    hv_topCenterRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_topCenterRow = hv_row-((hv_radian.TupleSin()
        )*hv_len2);
    }

    hv_topCenterRowTrans.Dispose();hv_topCenterColTrans.Dispose();
    HOperatorSet.AffineTransPoint2d(hv_map, hv_topCenterRow, hv_topCenterCol, out hv_topCenterRowTrans, 
        out hv_topCenterColTrans);



    hv_vecCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_vecCol = hv_topCenterColTrans-hv_colOut;
    }
    hv_vecRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_vecRow = hv_topCenterRowTrans-hv_rowOut;
    }
    hv_epslon.Dispose();
    hv_epslon = 0.0000000001;
    if ((int)(new HTuple(((hv_vecRow.TupleAbs())).TupleLess(hv_epslon))) != 0)
    {
      hv_vecRow.Dispose();
      hv_vecRow = new HTuple(hv_epslon);
    }

    if ((int)((new HTuple(hv_vecCol.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_vecRow.TupleGreaterEqual(
        0)))) != 0)
    {
      //сроб
      hv_radianOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianOut = -(((hv_vecRow/hv_vecCol)).TupleAtan()
          );
      }
    }
    else if ((int)((new HTuple(hv_vecCol.TupleGreaterEqual(0))).TupleAnd(new HTuple(hv_vecRow.TupleLess(
        0)))) != 0)
    {
      //срио
      hv_radianOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianOut = -(((hv_vecRow/hv_vecCol)).TupleAtan()
          );
      }
    }
    else if ((int)((new HTuple(hv_vecCol.TupleLess(0))).TupleAnd(new HTuple(hv_vecRow.TupleGreaterEqual(
        0)))) != 0)
    {
      //вСоб
      hv_radianOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianOut = ((new HTuple(-180)).TupleRad()
          )-(((hv_vecRow/hv_vecCol)).TupleAtan());
      }
    }
    else
    {
      //вСио
      hv_radianOut.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_radianOut = ((new HTuple(180)).TupleRad()
          )-(((hv_vecRow/hv_vecCol)).TupleAtan());
      }
    }




    hv_topCenterCol.Dispose();
    hv_topCenterRow.Dispose();
    hv_topCenterRowTrans.Dispose();
    hv_topCenterColTrans.Dispose();
    hv_vecCol.Dispose();
    hv_vecRow.Dispose();
    hv_epslon.Dispose();

    return;
  }

  public void DistancePLInWorld (HTuple hv_lineStartX, HTuple hv_lineStartY, HTuple hv_lineEndX, 
      HTuple hv_lineEndY, HTuple hv_ptX, HTuple hv_ptY, HTuple hv_mapToWorld, out HTuple hv_distanceWorld, 
      out HTuple hv_distancePixel)
  {


    // Initialize local and output iconic variables 
    hv_distanceWorld = new HTuple();
    hv_distancePixel = new HTuple();
    //transform image points to world points
    //affine_trans_point_2d (mapToWorld, lineStartX, lineStartY, lineStartX_World, lineStartY_World)
    //affine_trans_point_2d (mapToWorld, ptX, ptY, ptX_World, ptY_World)
    //affine_trans_point_2d (mapToWorld, lineEndX, lineEndY, lineEndX_World, lineEndY_World)

    //cal world distance

    hv_distancePixel.Dispose();
    HOperatorSet.DistancePl(hv_ptY, hv_ptX, hv_lineStartY, hv_lineStartX, hv_lineEndY, 
        hv_lineEndX, out hv_distancePixel);

    hv_distanceWorld.Dispose();
    HOperatorSet.DistancePl(hv_ptY, hv_ptX, hv_lineStartY, hv_lineStartX, hv_lineEndY, 
        hv_lineEndX, out hv_distanceWorld);


    return;
  }

  public void fit_line2D_rough (HTuple hv_Xs, HTuple hv_Ys, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_SumX = new HTuple(), hv_AverageX = new HTuple();
    HTuple hv_SumY = new HTuple(), hv_AverageY = new HTuple();
    HTuple hv_SumUpper = new HTuple(), hv_SumLower = new HTuple();
    HTuple hv_i = new HTuple(), hv_incrementUpper = new HTuple();
    HTuple hv_incrementLower = new HTuple(), hv_m = new HTuple();
    HTuple hv_b = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_SumX.Dispose();
    HOperatorSet.TupleSum(hv_Xs, out hv_SumX);
    hv_AverageX.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_AverageX = hv_SumX/(new HTuple(hv_Xs.TupleLength()
        ));
    }

    hv_SumY.Dispose();
    HOperatorSet.TupleSum(hv_Ys, out hv_SumY);
    hv_AverageY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_AverageY = hv_SumY/(new HTuple(hv_Ys.TupleLength()
        ));
    }

    hv_SumUpper.Dispose();
    hv_SumUpper = 0;
    hv_SumLower.Dispose();
    hv_SumLower = 0;
    for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs.TupleLength()))-1); hv_i = (int)hv_i + 1)
    {
      hv_incrementUpper.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_incrementUpper = ((hv_Xs.TupleSelect(
          hv_i))-hv_AverageX)*((hv_Ys.TupleSelect(hv_i))-hv_AverageY);
      }
      hv_incrementLower.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_incrementLower = (hv_AverageX-(hv_Xs.TupleSelect(
          hv_i)))*(hv_AverageX-(hv_Xs.TupleSelect(hv_i)));
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_SumUpper = hv_SumUpper+hv_incrementUpper;
      hv_SumUpper.Dispose();
      hv_SumUpper = ExpTmpLocalVar_SumUpper;
      }
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_SumLower = hv_SumLower+hv_incrementLower;
      hv_SumLower.Dispose();
      hv_SumLower = ExpTmpLocalVar_SumLower;
      }
      }
    }

    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_SumUpper/hv_SumLower;
    }
    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_AverageY-(hv_m*hv_AverageX);
    }



    //sample two point
    hv_lineX1.Dispose();
    HOperatorSet.TupleMax(hv_Xs, out hv_lineX1);
    hv_lineX2.Dispose();
    HOperatorSet.TupleMin(hv_Xs, out hv_lineX2);

    hv_lineY1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineY1 = (hv_m*hv_lineX1)+hv_b;
    }
    hv_lineY2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineY2 = (hv_m*hv_lineX2)+hv_b;
    }

    hv_SumX.Dispose();
    hv_AverageX.Dispose();
    hv_SumY.Dispose();
    hv_AverageY.Dispose();
    hv_SumUpper.Dispose();
    hv_SumLower.Dispose();
    hv_i.Dispose();
    hv_incrementUpper.Dispose();
    hv_incrementLower.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();

    return;
  }

  public void FitLine2D (HTuple hv_Xs, HTuple hv_Ys, HTuple hv_ignorePortion, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_totalPoints = new HTuple(), hv_numPointsLeft = new HTuple();
    HTuple hv_fiterrors = new HTuple(), hv_i = new HTuple();
    HTuple hv_Distance = new HTuple(), hv_Indices = new HTuple();
    HTuple hv_ErrorBest = new HTuple(), hv_index = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
    fit_line2D_rough(hv_Xs, hv_Ys, out hv_lineX1, out hv_lineY1, out hv_lineX2, out hv_lineY2);

    hv_totalPoints.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_totalPoints = new HTuple(hv_Xs.TupleLength()
        );
    }
    //number of points to ignore
    hv_numPointsLeft.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_numPointsLeft = (1.0-hv_ignorePortion)*(new HTuple(hv_Xs.TupleLength()
        ));
    }

    //calculate fitness of each point
    hv_fiterrors.Dispose();
    hv_fiterrors = new HTuple();
    for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_Xs.TupleLength()))-1); hv_i = (int)hv_i + 1)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_Distance.Dispose();
      HOperatorSet.DistancePl(hv_Ys.TupleSelect(hv_i), hv_Xs.TupleSelect(hv_i), hv_lineY1, 
          hv_lineX1, hv_lineY2, hv_lineX2, out hv_Distance);
      }
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      {
      HTuple 
        ExpTmpLocalVar_fiterrors = hv_fiterrors.TupleConcat(
          hv_Distance);
      hv_fiterrors.Dispose();
      hv_fiterrors = ExpTmpLocalVar_fiterrors;
      }
      }
    }

    hv_Indices.Dispose();
    HOperatorSet.TupleSortIndex(hv_fiterrors, out hv_Indices);

    //select the best fits
    hv_XsUsed.Dispose();
    hv_XsUsed = new HTuple();
    hv_YsUsed.Dispose();
    hv_YsUsed = new HTuple();
    hv_XsIgnored.Dispose();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored.Dispose();
    hv_YsIgnored = new HTuple();
    hv_ErrorBest.Dispose();
    hv_ErrorBest = new HTuple();
    HTuple end_val21 = hv_totalPoints-1;
    HTuple step_val21 = 1;
    for (hv_i=0; hv_i.Continue(end_val21, step_val21); hv_i = hv_i.TupleAdd(step_val21))
    {
      hv_index.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_index = hv_Indices.TupleSelect(
          hv_i);
      }
      if ((int)(new HTuple(hv_i.TupleLess(hv_numPointsLeft))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsUsed = hv_XsUsed.TupleConcat(
            hv_Xs.TupleSelect(hv_index));
        hv_XsUsed.Dispose();
        hv_XsUsed = ExpTmpLocalVar_XsUsed;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsUsed = hv_YsUsed.TupleConcat(
            hv_Ys.TupleSelect(hv_index));
        hv_YsUsed.Dispose();
        hv_YsUsed = ExpTmpLocalVar_YsUsed;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_ErrorBest = hv_ErrorBest.TupleConcat(
            hv_fiterrors.TupleSelect(hv_index));
        hv_ErrorBest.Dispose();
        hv_ErrorBest = ExpTmpLocalVar_ErrorBest;
        }
        }
      }
      else
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsIgnored = hv_XsIgnored.TupleConcat(
            hv_Xs.TupleSelect(hv_index));
        hv_XsIgnored.Dispose();
        hv_XsIgnored = ExpTmpLocalVar_XsIgnored;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsIgnored = hv_YsIgnored.TupleConcat(
            hv_Ys.TupleSelect(hv_index));
        hv_YsIgnored.Dispose();
        hv_YsIgnored = ExpTmpLocalVar_YsIgnored;
        }
        }
      }
    }

    //fit line again
    hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
    fit_line2D_rough(hv_XsUsed, hv_YsUsed, out hv_lineX1, out hv_lineY1, out hv_lineX2, 
        out hv_lineY2);



    hv_totalPoints.Dispose();
    hv_numPointsLeft.Dispose();
    hv_fiterrors.Dispose();
    hv_i.Dispose();
    hv_Distance.Dispose();
    hv_Indices.Dispose();
    hv_ErrorBest.Dispose();
    hv_index.Dispose();

    return;
  }

  public void GenLineRegion (out HObject ho_lineRegion, HTuple hv_lineXStart, HTuple hv_lineYStart, 
      HTuple hv_lineXEnd, HTuple hv_lineYEnd, HTuple hv_imageWidth, HTuple hv_imageHeight)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_epslon = new HTuple(), hv_m = new HTuple(), hv_b = new HTuple();
    HTuple hv_xStart = new HTuple(), hv_xEnd = new HTuple();
    HTuple hv_yStart = new HTuple(), hv_yEnd = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_lineXEnd-hv_lineXStart;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_lineYEnd-hv_lineYStart;
    }

    hv_epslon.Dispose();
    hv_epslon = 0.0000000001;
    if ((int)(new HTuple(((hv_xDiff.TupleAbs())).TupleLess(hv_epslon))) != 0)
    {
      hv_xDiff.Dispose();
      hv_xDiff = new HTuple(hv_epslon);
    }

    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_yDiff/hv_xDiff;
    }
    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_lineYStart-(hv_m*hv_lineXStart);
    }

    hv_xStart.Dispose();
    hv_xStart = 0;
    hv_xEnd.Dispose();
    hv_xEnd = new HTuple(hv_imageWidth);

    hv_yStart.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yStart = (hv_m*hv_xStart)+hv_b;
    }
    if ((int)((new HTuple(hv_yStart.TupleGreater(hv_imageHeight))).TupleOr(new HTuple(hv_yStart.TupleLess(
        0)))) != 0)
    {
      hv_yStart.Dispose();
      hv_yStart = 0;
      hv_xStart.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xStart = (hv_yStart-hv_b)/hv_m;
      }
    }

    hv_yEnd.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yEnd = (hv_m*hv_xEnd)+hv_b;
    }
    if ((int)((new HTuple(hv_yEnd.TupleGreater(hv_imageHeight))).TupleOr(new HTuple(hv_yEnd.TupleLess(
        0)))) != 0)
    {
      hv_yEnd.Dispose();
      hv_yEnd = new HTuple(hv_imageHeight);
      hv_xEnd.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_xEnd = (hv_yEnd-hv_b)/hv_m;
      }
    }

    //gen_region_line (lineRegion, yStart, xStart, yEnd, xEnd)
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_lineRegion.Dispose();
    HOperatorSet.GenContourPolygonXld(out ho_lineRegion, hv_yStart.TupleConcat(hv_yEnd), 
        hv_xStart.TupleConcat(hv_xEnd));
    }

    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_epslon.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();
    hv_xStart.Dispose();
    hv_xEnd.Dispose();
    hv_yStart.Dispose();
    hv_yEnd.Dispose();

    return;
  }

  public void GenVisibleMeasureRect (out HObject ho_ROI_0, HTuple hv_rect1_row, HTuple hv_rect1_col, 
      HTuple hv_rect1_rad, HTuple hv_rect1_len1, HTuple hv_rect1_len2, HTuple hv_Width, 
      HTuple hv_Height, out HTuple hv_MeasureHandle)
  {


    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    hv_MeasureHandle = new HTuple();
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle2(out ho_ROI_0, hv_rect1_row, hv_rect1_col, hv_rect1_rad, 
        hv_rect1_len1, hv_rect1_len2);
    hv_MeasureHandle.Dispose();
    HOperatorSet.GenMeasureRectangle2(hv_rect1_row, hv_rect1_col, hv_rect1_rad, hv_rect1_len1, 
        hv_rect1_len2, hv_Width, hv_Height, "nearest_neighbor", out hv_MeasureHandle);


    return;
  }

  public void get_direction_unit (HTuple hv_xStart, HTuple hv_yStart, HTuple hv_xEnd, 
      HTuple hv_yEnd, out HTuple hv_xUnit, out HTuple hv_yUnit)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_totalDiff = new HTuple();
    // Initialize local and output iconic variables 
    hv_xUnit = new HTuple();
    hv_yUnit = new HTuple();
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_xEnd-hv_xStart;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_yEnd-hv_yStart;
    }

    hv_totalDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_totalDiff = (((hv_yDiff*hv_yDiff)+(hv_xDiff*hv_xDiff))).TupleSqrt()
        ;
    }

    hv_xUnit.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xUnit = hv_xDiff/hv_totalDiff;
    }
    hv_yUnit.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yUnit = hv_yDiff/hv_totalDiff;
    }


    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_totalDiff.Dispose();

    return;
  }

  public void get_perpendicular_direction (HTuple hv_inputVectorX, HTuple hv_inputVectorY, 
      out HTuple hv_outputVectorX, out HTuple hv_outputVectorY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xAssume = new HTuple(), hv_yAssume = new HTuple();
    HTuple hv_distAssume = new HTuple();
    // Initialize local and output iconic variables 
    hv_outputVectorX = new HTuple();
    hv_outputVectorY = new HTuple();
    //assume that a perticular vector perpendiclar to me is (xAssume, yAssume), let xAssume = 1
    hv_xAssume.Dispose();
    hv_xAssume = 1;
    hv_yAssume.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yAssume = -(hv_inputVectorX/hv_inputVectorY);
    }
    hv_distAssume.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_distAssume = (((hv_yAssume*hv_yAssume)+(hv_xAssume*hv_xAssume))).TupleSqrt()
        ;
    }

    //calculate unit length direction vector
    hv_outputVectorX.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outputVectorX = hv_xAssume/hv_distAssume;
    }
    hv_outputVectorY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outputVectorY = hv_yAssume/hv_distAssume;
    }


    hv_xAssume.Dispose();
    hv_yAssume.Dispose();
    hv_distAssume.Dispose();

    return;
  }

  public void get_perpendicular_line_that_passes (HTuple hv_lineXStart, HTuple hv_lineYStart, 
      HTuple hv_lineXEnd, HTuple hv_lineYEnd, HTuple hv_xPass, HTuple hv_yPass, out HTuple hv_lineXPerpendicular, 
      out HTuple hv_lineYPerpendicular)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xUnit = new HTuple(), hv_yUnit = new HTuple();
    HTuple hv_outputVectorX = new HTuple(), hv_outputVectorY = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineXPerpendicular = new HTuple();
    hv_lineYPerpendicular = new HTuple();
    hv_xUnit.Dispose();hv_yUnit.Dispose();
    get_direction_unit(hv_lineXStart, hv_lineYStart, hv_lineXEnd, hv_lineYEnd, out hv_xUnit, 
        out hv_yUnit);
    hv_outputVectorX.Dispose();hv_outputVectorY.Dispose();
    get_perpendicular_direction(hv_xUnit, hv_yUnit, out hv_outputVectorX, out hv_outputVectorY);

    //another point on the perpendicular line can be determined by
    //adding perpendicular unit vector to the first point that we passed
    hv_lineXPerpendicular.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineXPerpendicular = hv_xPass+hv_outputVectorX;
    }
    hv_lineYPerpendicular.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineYPerpendicular = hv_yPass+hv_outputVectorY;
    }


    hv_xUnit.Dispose();
    hv_yUnit.Dispose();
    hv_outputVectorX.Dispose();
    hv_outputVectorY.Dispose();

    return;
  }

  public void GetImageToWorldMap (HObject ho_image, HTuple hv_camParamFile, HTuple hv_camPoseFile, 
      out HTuple hv_map)
  {




    // Local iconic variables 

    // Local control variables 

    HTuple hv_Pose = new HTuple(), hv_CameraParam = new HTuple();
    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_XsImage = new HTuple(), hv_YsImage = new HTuple();
    HTuple hv_XsWorld = new HTuple(), hv_YsWorld = new HTuple();
    HTuple hv_row = new HTuple(), hv_column = new HTuple();
    HTuple hv_xImage = new HTuple(), hv_yImage = new HTuple();
    HTuple hv_xWorld = new HTuple(), hv_yWorld = new HTuple();
    // Initialize local and output iconic variables 
    hv_map = new HTuple();
    hv_Pose.Dispose();
    HOperatorSet.ReadPose(hv_camPoseFile, out hv_Pose);
    hv_CameraParam.Dispose();
    HOperatorSet.ReadCamPar(hv_camParamFile, out hv_CameraParam);
    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_image, out hv_Width, out hv_Height);

    //generate 9 image-to-world coordinate pairs
    hv_XsImage.Dispose();
    hv_XsImage = new HTuple();
    hv_YsImage.Dispose();
    hv_YsImage = new HTuple();
    hv_XsWorld.Dispose();
    hv_XsWorld = new HTuple();
    hv_YsWorld.Dispose();
    hv_YsWorld = new HTuple();

    for (hv_row=-1; (int)hv_row<=1; hv_row = (int)hv_row + 1)
    {
      for (hv_column=-1; (int)hv_column<=1; hv_column = (int)hv_column + 1)
      {
        hv_xImage.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_xImage = (hv_Width/2)+(100*hv_column);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsImage = hv_XsImage.TupleConcat(
            hv_xImage);
        hv_XsImage.Dispose();
        hv_XsImage = ExpTmpLocalVar_XsImage;
        }
        }
        hv_yImage.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_yImage = (hv_Height/2)+(100*hv_row);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsImage = hv_YsImage.TupleConcat(
            hv_yImage);
        hv_YsImage.Dispose();
        hv_YsImage = ExpTmpLocalVar_YsImage;
        }
        }

        hv_xWorld.Dispose();hv_yWorld.Dispose();
        HOperatorSet.ImagePointsToWorldPlane(hv_CameraParam, hv_Pose, hv_yImage, 
            hv_xImage, "mm", out hv_xWorld, out hv_yWorld);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsWorld = hv_XsWorld.TupleConcat(
            hv_xWorld);
        hv_XsWorld.Dispose();
        hv_XsWorld = ExpTmpLocalVar_XsWorld;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsWorld = hv_YsWorld.TupleConcat(
            hv_yWorld);
        hv_YsWorld.Dispose();
        hv_YsWorld = ExpTmpLocalVar_YsWorld;
        }
        }
      }
    }

    hv_map.Dispose();
    HOperatorSet.VectorToSimilarity(hv_XsImage, hv_YsImage, hv_XsWorld, hv_YsWorld, 
        out hv_map);


    hv_Pose.Dispose();
    hv_CameraParam.Dispose();
    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_XsImage.Dispose();
    hv_YsImage.Dispose();
    hv_XsWorld.Dispose();
    hv_YsWorld.Dispose();
    hv_row.Dispose();
    hv_column.Dispose();
    hv_xImage.Dispose();
    hv_yImage.Dispose();
    hv_xWorld.Dispose();
    hv_yWorld.Dispose();

    return;
  }

  public void GetWorldImageMap (HObject ho_Image, HTuple hv_camParamFile, HTuple hv_camPoseFile, 
      out HTuple hv_mapToImage, out HTuple hv_mapToWorld, out HTuple hv_Pose, out HTuple hv_CameraParam)
  {




    // Local iconic variables 

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_XsImage = new HTuple(), hv_YsImage = new HTuple();
    HTuple hv_XsWorld = new HTuple(), hv_YsWorld = new HTuple();
    HTuple hv_row = new HTuple(), hv_column = new HTuple();
    HTuple hv_xImage = new HTuple(), hv_yImage = new HTuple();
    HTuple hv_xWorld = new HTuple(), hv_yWorld = new HTuple();
    // Initialize local and output iconic variables 
    hv_mapToImage = new HTuple();
    hv_mapToWorld = new HTuple();
    hv_Pose = new HTuple();
    hv_CameraParam = new HTuple();
    hv_Pose.Dispose();
    HOperatorSet.ReadPose(hv_camPoseFile, out hv_Pose);
    hv_CameraParam.Dispose();
    HOperatorSet.ReadCamPar(hv_camParamFile, out hv_CameraParam);
    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);

    //generate 9 image-to-world coordinate pairs
    hv_XsImage.Dispose();
    hv_XsImage = new HTuple();
    hv_YsImage.Dispose();
    hv_YsImage = new HTuple();
    hv_XsWorld.Dispose();
    hv_XsWorld = new HTuple();
    hv_YsWorld.Dispose();
    hv_YsWorld = new HTuple();

    for (hv_row=-1; (int)hv_row<=1; hv_row = (int)hv_row + 1)
    {
      for (hv_column=-1; (int)hv_column<=1; hv_column = (int)hv_column + 1)
      {
        hv_xImage.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_xImage = (hv_Width/2)+(100*hv_column);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsImage = hv_XsImage.TupleConcat(
            hv_xImage);
        hv_XsImage.Dispose();
        hv_XsImage = ExpTmpLocalVar_XsImage;
        }
        }
        hv_yImage.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_yImage = (hv_Height/2)+(100*hv_row);
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsImage = hv_YsImage.TupleConcat(
            hv_yImage);
        hv_YsImage.Dispose();
        hv_YsImage = ExpTmpLocalVar_YsImage;
        }
        }

        hv_xWorld.Dispose();hv_yWorld.Dispose();
        HOperatorSet.ImagePointsToWorldPlane(hv_CameraParam, hv_Pose, hv_yImage, 
            hv_xImage, "mm", out hv_xWorld, out hv_yWorld);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_XsWorld = hv_XsWorld.TupleConcat(
            hv_xWorld);
        hv_XsWorld.Dispose();
        hv_XsWorld = ExpTmpLocalVar_XsWorld;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_YsWorld = hv_YsWorld.TupleConcat(
            hv_yWorld);
        hv_YsWorld.Dispose();
        hv_YsWorld = ExpTmpLocalVar_YsWorld;
        }
        }
      }
    }

    hv_mapToImage.Dispose();
    HOperatorSet.VectorToSimilarity(hv_XsWorld, hv_YsWorld, hv_XsImage, hv_YsImage, 
        out hv_mapToImage);
    hv_mapToWorld.Dispose();
    HOperatorSet.VectorToSimilarity(hv_XsImage, hv_YsImage, hv_XsWorld, hv_YsWorld, 
        out hv_mapToWorld);



    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_XsImage.Dispose();
    hv_YsImage.Dispose();
    hv_XsWorld.Dispose();
    hv_YsWorld.Dispose();
    hv_row.Dispose();
    hv_column.Dispose();
    hv_xImage.Dispose();
    hv_yImage.Dispose();
    hv_xWorld.Dispose();
    hv_yWorld.Dispose();

    return;
  }

  public void I40_FindOrigin (HObject ho_Image, out HObject ho_FindLineRegions, HTuple hv_ModelID, 
      out HTuple hv_VAxisX1, out HTuple hv_VAxisY1, out HTuple hv_VAxisX2, out HTuple hv_VAxisY2, 
      out HTuple hv_HAxisX1, out HTuple hv_HAxisY1, out HTuple hv_HAxisX2, out HTuple hv_HAxisY2, 
      out HTuple hv_CoorCenterY, out HTuple hv_CoorCenterX, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_EdgeAmplitude;
    HObject ho_Region, ho_BinImage, ho_Contours, ho_Rectangle1;
    HObject ho_RegionMoved1, ho_Rectangle2, ho_RegionMoved2;
    HObject ho_Rectangle3, ho_RegionMoved3, ho_FindLineRegions2;
    HObject ho_FindLineRegions3, ho_PointsFound4, ho_PointsFound5;

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_xCoeff = new HTuple(), hv_yCoeff = new HTuple();
    HTuple hv_Row5 = new HTuple(), hv_Column5 = new HTuple();
    HTuple hv_Angle = new HTuple(), hv_Score = new HTuple();
    HTuple hv_HomMat2D = new HTuple(), hv_Area1 = new HTuple();
    HTuple hv_centerModelY = new HTuple(), hv_centerModelX = new HTuple();
    HTuple hv_Row2 = new HTuple(), hv_Column2 = new HTuple();
    HTuple hv_Phi1 = new HTuple(), hv_Length11 = new HTuple();
    HTuple hv_Length21 = new HTuple(), hv_Row3 = new HTuple();
    HTuple hv_Column3 = new HTuple(), hv_Phi2 = new HTuple();
    HTuple hv_Length12 = new HTuple(), hv_Length22 = new HTuple();
    HTuple hv_Row4 = new HTuple(), hv_Column4 = new HTuple();
    HTuple hv_Phi3 = new HTuple(), hv_Length13 = new HTuple();
    HTuple hv_Length23 = new HTuple(), hv_XsUpperRight = new HTuple();
    HTuple hv_YsUpperRight = new HTuple(), hv_XsLeftUpper = new HTuple();
    HTuple hv_YsLeftUpper = new HTuple(), hv_XsLeftLower = new HTuple();
    HTuple hv_YsLeftLower = new HTuple(), hv_XsLeft = new HTuple();
    HTuple hv_YsLeft = new HTuple(), hv_ignorePortion = new HTuple();
    HTuple hv_lineX1Horizontal = new HTuple(), hv_lineY1Horizontal = new HTuple();
    HTuple hv_lineX2Horizontal = new HTuple(), hv_lineY2Horizontal = new HTuple();
    HTuple hv_XsUsed1 = new HTuple(), hv_YsUsed1 = new HTuple();
    HTuple hv_XsIgnored1 = new HTuple(), hv_YsIgnored1 = new HTuple();
    HTuple hv_lineY1Vertical = new HTuple(), hv_lineX1Vertical = new HTuple();
    HTuple hv_lineY2Vertical = new HTuple(), hv_lineX2Vertical = new HTuple();
    HTuple hv_YsUsed2 = new HTuple(), hv_XsUsed2 = new HTuple();
    HTuple hv_YsIgnored2 = new HTuple(), hv_XsIgnored2 = new HTuple();
    HTuple hv_Row = new HTuple(), hv_Column = new HTuple();
    HTuple hv_IsOverlapping = new HTuple(), hv_IsOverlapping1 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_FindLineRegions);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_EdgeAmplitude);
    HOperatorSet.GenEmptyObj(out ho_Region);
    HOperatorSet.GenEmptyObj(out ho_BinImage);
    HOperatorSet.GenEmptyObj(out ho_Contours);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_RegionMoved1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle2);
    HOperatorSet.GenEmptyObj(out ho_RegionMoved2);
    HOperatorSet.GenEmptyObj(out ho_Rectangle3);
    HOperatorSet.GenEmptyObj(out ho_RegionMoved3);
    HOperatorSet.GenEmptyObj(out ho_FindLineRegions2);
    HOperatorSet.GenEmptyObj(out ho_FindLineRegions3);
    HOperatorSet.GenEmptyObj(out ho_PointsFound4);
    HOperatorSet.GenEmptyObj(out ho_PointsFound5);
    hv_VAxisX1 = new HTuple();
    hv_VAxisY1 = new HTuple();
    hv_VAxisX2 = new HTuple();
    hv_VAxisY2 = new HTuple();
    hv_HAxisX1 = new HTuple();
    hv_HAxisY1 = new HTuple();
    hv_HAxisX2 = new HTuple();
    hv_HAxisY2 = new HTuple();
    hv_CoorCenterY = new HTuple();
    hv_CoorCenterX = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_Width.Dispose();
    hv_Width = 2032;
    hv_Height.Dispose();
    hv_Height = 2500;

    hv_xCoeff.Dispose();
    hv_xCoeff = 0.016;
    hv_yCoeff.Dispose();
    hv_yCoeff = 0.02;

    //create xld features for fixturing
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_0, 99.0277, 161.153, 1198.89, 1388.46);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);
    ho_EdgeAmplitude.Dispose();
    HOperatorSet.SobelAmp(ho_ImageReduced, out ho_EdgeAmplitude, "sum_abs", 3);
    ho_Region.Dispose();
    HOperatorSet.Threshold(ho_EdgeAmplitude, out ho_Region, 0.5, 255);
    ho_BinImage.Dispose();
    HOperatorSet.RegionToBin(ho_Region, out ho_BinImage, 255, 0, hv_Width, hv_Height);
    ho_Contours.Dispose();
    HOperatorSet.GenContourRegionXld(ho_Region, out ho_Contours, "border");

    hv_Row5.Dispose();hv_Column5.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
    HOperatorSet.FindShapeModel(ho_BinImage, hv_ModelID, -0.39, 0.79, 0.5, 1, 0.5, 
        "least_squares", 0, 0.9, out hv_Row5, out hv_Column5, out hv_Angle, out hv_Score);
    hv_HomMat2D.Dispose();
    HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row5, hv_Column5, hv_Angle, out hv_HomMat2D);

    //center of the model
    hv_Area1.Dispose();hv_centerModelY.Dispose();hv_centerModelX.Dispose();
    HOperatorSet.AreaCenter(ho_Region, out hv_Area1, out hv_centerModelY, out hv_centerModelX);

    //align all the measure rects with respect to the created shape model which is zero centered
    HOperatorSet.SetSystem("clip_region", "false");
    //upperleft find line
    //gen_rectangle2 (Rectangle, 331.86700000, 510.16200000, rad(-90.00000000), 40, 90.95780000)
    //move_region (Rectangle, RegionMoved, -centerModelY, -centerModelX)
    //upper right find line
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle1.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle1, 1676.14, 792.335, (new HTuple(90)).TupleRad()
        , 60, 220);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_RegionMoved1.Dispose();
    HOperatorSet.MoveRegion(ho_Rectangle1, out ho_RegionMoved1, -hv_centerModelY, 
        -hv_centerModelX);
    }
    //left upper find line
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle2.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle2, 477.38200000, 370.80400000, (new HTuple(0.00000000)).TupleRad()
        , 60, 75.89940000);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_RegionMoved2.Dispose();
    HOperatorSet.MoveRegion(ho_Rectangle2, out ho_RegionMoved2, -hv_centerModelY, 
        -hv_centerModelX);
    }
    //left lower find line
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_Rectangle3.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle3, 897.15300000, 368.12700000, (new HTuple(0.00000000)).TupleRad()
        , 60, 48.35380000);
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    ho_RegionMoved3.Dispose();
    HOperatorSet.MoveRegion(ho_Rectangle3, out ho_RegionMoved3, -hv_centerModelY, 
        -hv_centerModelX);
    }
    HOperatorSet.SetSystem("clip_region", "true");


    //fix all the measure rects to track individual parts to be measured
    //affine_trans_region (RegionMoved, FindLineRegions, HomMat2D, 'nearest_neighbor')
    ho_FindLineRegions.Dispose();
    HOperatorSet.AffineTransRegion(ho_RegionMoved1, out ho_FindLineRegions, hv_HomMat2D, 
        "nearest_neighbor");
    ho_FindLineRegions2.Dispose();
    HOperatorSet.AffineTransRegion(ho_RegionMoved2, out ho_FindLineRegions2, hv_HomMat2D, 
        "nearest_neighbor");
    ho_FindLineRegions3.Dispose();
    HOperatorSet.AffineTransRegion(ho_RegionMoved3, out ho_FindLineRegions3, hv_HomMat2D, 
        "nearest_neighbor");

    //get the pose of measure rects that are fixed in place
    //smallest_rectangle2 (FindLineRegions, Row1, Column1, Phi, Length1, Length2)
    hv_Row2.Dispose();hv_Column2.Dispose();hv_Phi1.Dispose();hv_Length11.Dispose();hv_Length21.Dispose();
    HOperatorSet.SmallestRectangle2(ho_FindLineRegions, out hv_Row2, out hv_Column2, 
        out hv_Phi1, out hv_Length11, out hv_Length21);
    hv_Row3.Dispose();hv_Column3.Dispose();hv_Phi2.Dispose();hv_Length12.Dispose();hv_Length22.Dispose();
    HOperatorSet.SmallestRectangle2(ho_FindLineRegions2, out hv_Row3, out hv_Column3, 
        out hv_Phi2, out hv_Length12, out hv_Length22);
    hv_Row4.Dispose();hv_Column4.Dispose();hv_Phi3.Dispose();hv_Length13.Dispose();hv_Length23.Dispose();
    HOperatorSet.SmallestRectangle2(ho_FindLineRegions3, out hv_Row4, out hv_Column4, 
        out hv_Phi3, out hv_Length13, out hv_Length23);

    //find all the points within the above rects
    //VisionProStyleFindLine (Image, ROI_0, 'positive', Row1, Column1, rad(-90), Length2, Length1, 8, threshold, sigma, firstOrLast, usingPairs, whichEdge, minEdge, maxEdge, XsUpperLeft, YsUpperLeft)
    //VisionProStyleFindLine (Image, ROI_0, 'negative', Row2, Column2, rad(-90), Length21, Length11, 8, threshold1, sigma1, firstOrLast1, usingPairs1, whichEdge1, minEdge1, maxEdge1, XsUpperRight, YsUpperRight)
    //VisionProStyleFindLine (Image, ROI_0, 'positive', Row3, Column3, rad(0), Length22, Length12, 8, threshold2, sigma2, firstOrLast2, usingPairs2, whichEdge2, minEdge2, maxEdge2, XsLeftUpper, YsLeftUpper)
    //VisionProStyleFindLine (Image, ROI_0, 'positive', Row4, Column4, rad(0), Length13, Length23, 8, threshold3, sigma3, firstOrLast3, usingPairs3, whichEdge3, minEdge3, maxEdge3, XsLeftLower, YsLeftLower)

    //fit left and upper base line
    //tuple_concat (XsUpperLeft, XsUpperRight, XsUpper)
    //tuple_concat (YsUpperLeft, YsUpperRight, YsUpper)
    hv_XsLeft.Dispose();
    HOperatorSet.TupleConcat(hv_XsLeftUpper, hv_XsLeftLower, out hv_XsLeft);
    hv_YsLeft.Dispose();
    HOperatorSet.TupleConcat(hv_YsLeftUpper, hv_YsLeftLower, out hv_YsLeft);

    hv_ignorePortion.Dispose();
    hv_ignorePortion = 0.2;
    hv_lineX1Horizontal.Dispose();hv_lineY1Horizontal.Dispose();hv_lineX2Horizontal.Dispose();hv_lineY2Horizontal.Dispose();hv_XsUsed1.Dispose();hv_YsUsed1.Dispose();hv_XsIgnored1.Dispose();hv_YsIgnored1.Dispose();
    FitLine2D(hv_XsUpperRight, hv_YsUpperRight, hv_ignorePortion, out hv_lineX1Horizontal, 
        out hv_lineY1Horizontal, out hv_lineX2Horizontal, out hv_lineY2Horizontal, 
        out hv_XsUsed1, out hv_YsUsed1, out hv_XsIgnored1, out hv_YsIgnored1);
    hv_lineY1Vertical.Dispose();hv_lineX1Vertical.Dispose();hv_lineY2Vertical.Dispose();hv_lineX2Vertical.Dispose();hv_YsUsed2.Dispose();hv_XsUsed2.Dispose();hv_YsIgnored2.Dispose();hv_XsIgnored2.Dispose();
    FitLine2D(hv_YsLeft, hv_XsLeft, hv_ignorePortion, out hv_lineY1Vertical, out hv_lineX1Vertical, 
        out hv_lineY2Vertical, out hv_lineX2Vertical, out hv_YsUsed2, out hv_XsUsed2, 
        out hv_YsIgnored2, out hv_XsIgnored2);

    hv_XsUsed.Dispose();
    HOperatorSet.TupleConcat(hv_XsUsed1, hv_XsUsed2, out hv_XsUsed);
    hv_YsUsed.Dispose();
    HOperatorSet.TupleConcat(hv_YsUsed1, hv_YsUsed2, out hv_YsUsed);
    hv_XsIgnored.Dispose();
    HOperatorSet.TupleConcat(hv_XsIgnored1, hv_XsIgnored2, out hv_XsIgnored);
    hv_YsIgnored.Dispose();
    HOperatorSet.TupleConcat(hv_YsIgnored1, hv_YsIgnored2, out hv_YsIgnored);

    hv_Row.Dispose();hv_Column.Dispose();hv_IsOverlapping.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1Vertical, hv_lineX1Vertical, hv_lineY2Vertical, 
        hv_lineX2Vertical, hv_lineY1Horizontal, hv_lineX1Horizontal, hv_lineY2Horizontal, 
        hv_lineX2Horizontal, out hv_Row, out hv_Column, out hv_IsOverlapping);

    //move the intersection point from top left to top center
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_VAxisX1.Dispose();hv_VAxisY1.Dispose();
    move_point_along_line(hv_Column, hv_Row, hv_lineX1Horizontal, hv_lineY1Horizontal, 
        6.74/hv_xCoeff, out hv_VAxisX1, out hv_VAxisY1);
    }
    ho_PointsFound4.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_PointsFound4, hv_VAxisY1, hv_VAxisX1, 
        100, hv_Angle);

    //the perpendicular can be determined by the last four params
    hv_VAxisX2.Dispose();hv_VAxisY2.Dispose();
    get_perpendicular_line_that_passes(hv_lineX1Horizontal, hv_lineY1Horizontal, 
        hv_VAxisX1, hv_VAxisY1, hv_VAxisX1, hv_VAxisY1, out hv_VAxisX2, out hv_VAxisY2);

    //offset the horizontal line
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_HAxisX1.Dispose();hv_HAxisY1.Dispose();hv_HAxisX2.Dispose();hv_HAxisY2.Dispose();
    offset_line(hv_lineX1Horizontal, hv_lineY1Horizontal, hv_lineX2Horizontal, hv_lineY2Horizontal, 
        -19.47/hv_yCoeff, out hv_HAxisX1, out hv_HAxisY1, out hv_HAxisX2, out hv_HAxisY2);
    }

    //draw new coordinate center
    hv_CoorCenterY.Dispose();hv_CoorCenterX.Dispose();hv_IsOverlapping1.Dispose();
    HOperatorSet.IntersectionLines(hv_VAxisY1, hv_VAxisX1, hv_VAxisY2, hv_VAxisX2, 
        hv_HAxisY1, hv_HAxisX1, hv_HAxisY2, hv_HAxisX2, out hv_CoorCenterY, out hv_CoorCenterX, 
        out hv_IsOverlapping1);
    ho_PointsFound5.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_PointsFound5, hv_CoorCenterY, hv_CoorCenterX, 
        100, hv_Angle);


    //concat objects necessary for displaying
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRegions, ho_FindLineRegions2, out ExpTmpOutVar_0
        );
    ho_FindLineRegions.Dispose();
    ho_FindLineRegions = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRegions, ho_FindLineRegions3, out ExpTmpOutVar_0
        );
    ho_FindLineRegions.Dispose();
    ho_FindLineRegions = ExpTmpOutVar_0;
    }
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_EdgeAmplitude.Dispose();
    ho_Region.Dispose();
    ho_BinImage.Dispose();
    ho_Contours.Dispose();
    ho_Rectangle1.Dispose();
    ho_RegionMoved1.Dispose();
    ho_Rectangle2.Dispose();
    ho_RegionMoved2.Dispose();
    ho_Rectangle3.Dispose();
    ho_RegionMoved3.Dispose();
    ho_FindLineRegions2.Dispose();
    ho_FindLineRegions3.Dispose();
    ho_PointsFound4.Dispose();
    ho_PointsFound5.Dispose();

    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_xCoeff.Dispose();
    hv_yCoeff.Dispose();
    hv_Row5.Dispose();
    hv_Column5.Dispose();
    hv_Angle.Dispose();
    hv_Score.Dispose();
    hv_HomMat2D.Dispose();
    hv_Area1.Dispose();
    hv_centerModelY.Dispose();
    hv_centerModelX.Dispose();
    hv_Row2.Dispose();
    hv_Column2.Dispose();
    hv_Phi1.Dispose();
    hv_Length11.Dispose();
    hv_Length21.Dispose();
    hv_Row3.Dispose();
    hv_Column3.Dispose();
    hv_Phi2.Dispose();
    hv_Length12.Dispose();
    hv_Length22.Dispose();
    hv_Row4.Dispose();
    hv_Column4.Dispose();
    hv_Phi3.Dispose();
    hv_Length13.Dispose();
    hv_Length23.Dispose();
    hv_XsUpperRight.Dispose();
    hv_YsUpperRight.Dispose();
    hv_XsLeftUpper.Dispose();
    hv_YsLeftUpper.Dispose();
    hv_XsLeftLower.Dispose();
    hv_YsLeftLower.Dispose();
    hv_XsLeft.Dispose();
    hv_YsLeft.Dispose();
    hv_ignorePortion.Dispose();
    hv_lineX1Horizontal.Dispose();
    hv_lineY1Horizontal.Dispose();
    hv_lineX2Horizontal.Dispose();
    hv_lineY2Horizontal.Dispose();
    hv_XsUsed1.Dispose();
    hv_YsUsed1.Dispose();
    hv_XsIgnored1.Dispose();
    hv_YsIgnored1.Dispose();
    hv_lineY1Vertical.Dispose();
    hv_lineX1Vertical.Dispose();
    hv_lineY2Vertical.Dispose();
    hv_lineX2Vertical.Dispose();
    hv_YsUsed2.Dispose();
    hv_XsUsed2.Dispose();
    hv_YsIgnored2.Dispose();
    hv_XsIgnored2.Dispose();
    hv_Row.Dispose();
    hv_Column.Dispose();
    hv_IsOverlapping.Dispose();
    hv_IsOverlapping1.Dispose();

    return;
  }

  public void I94TopFaceMeasurement (HObject ho_Image, out HObject ho_lineRegions, 
      out HObject ho_FindLineRects, HTuple hv_ModelID, HTuple hv_xCoeff, HTuple hv_yCoeff, 
      HTuple hv_Biases, HTuple hv_thresholds, out HTuple hv_outputs, out HTuple hv_crossesXused, 
      out HTuple hv_crossesYused, out HTuple hv_crossesXIgnored, out HTuple hv_crossesYIgnored, 
      out HTuple hv_intersectXs, out HTuple hv_intersectYs, out HTuple hv_outputsPixel)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_ROI_0, ho_ImageReduced, ho_Border;
    HObject ho_rectBaseRight, ho_lineRegionRightBase, ho_rectBaseTop;
    HObject ho_lineRegionTopBase, ho_Rectangle1, ho_Rectangle;
    HObject ho_findLineRegionFAI2, ho_lineRegion, ho_rectFAI3;
    HObject ho_rectFAI4, ho_rect, ho_lineRegion1, ho_Cross;

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_mapToImage = new HTuple(), hv_mapToWorld = new HTuple();
    HTuple hv_crossSize = new HTuple(), hv_numSubRects = new HTuple();
    HTuple hv_ignorePortion = new HTuple(), hv_ModelThreshold = new HTuple();
    HTuple hv_TopThreshold = new HTuple(), hv_RightThreshold = new HTuple();
    HTuple hv_FAI2Threshold = new HTuple(), hv_FAI3Threshold = new HTuple();
    HTuple hv_FAI4Threshold = new HTuple(), hv_FAI5Threshold = new HTuple();
    HTuple hv_FAI6Threshold = new HTuple(), hv_FAI9Threshold = new HTuple();
    HTuple hv_FAI12Threshold = new HTuple(), hv_FAI16Threshold = new HTuple();
    HTuple hv_FAI17Threshold = new HTuple(), hv_FAI19Threshold = new HTuple();
    HTuple hv_FAI20Threshold_up = new HTuple(), hv_FAI20Threshold_down = new HTuple();
    HTuple hv_newWidth = new HTuple(), hv_FAI2_LEN_P1 = new HTuple();
    HTuple hv_FAI2_LEN_P2 = new HTuple(), hv_FAI2_LEN_P3 = new HTuple();
    HTuple hv_FAI3_LEN_P1 = new HTuple(), hv_FAI3_LEN_P2 = new HTuple();
    HTuple hv_FAI3_LEN_P3 = new HTuple(), hv_FAI4_LEN_P1 = new HTuple();
    HTuple hv_FAI4_LEN_P2 = new HTuple(), hv_FAI4_LEN_P3 = new HTuple();
    HTuple hv_FAI5_LEN_P1 = new HTuple(), hv_FAI5_LEN_P2 = new HTuple();
    HTuple hv_FAI5_LEN_P3 = new HTuple(), hv_FAI6_LEN_P1 = new HTuple();
    HTuple hv_FAI6_LEN_P2 = new HTuple(), hv_FAI6_LEN_P3 = new HTuple();
    HTuple hv_FAI9_LEN_P1 = new HTuple(), hv_FAI9_LEN_P2 = new HTuple();
    HTuple hv_FAI9_LEN_P3 = new HTuple(), hv_FAI12_LEN_P1 = new HTuple();
    HTuple hv_FAI12_LEN_P2 = new HTuple(), hv_FAI16_LEN_P1 = new HTuple();
    HTuple hv_FAI16_LEN_P2 = new HTuple(), hv_FAI17_LEN_P1 = new HTuple();
    HTuple hv_FAI17_LEN_P2 = new HTuple(), hv_FAI19_LEN_P1 = new HTuple();
    HTuple hv_FAI19_LEN_P2 = new HTuple(), hv_FAI20_LEN_X = new HTuple();
    HTuple hv_FAI20_LEN_Y = new HTuple(), hv_modelPath = new HTuple();
    HTuple hv_Threshold = new HTuple(), hv_rowModel = new HTuple();
    HTuple hv_colModel = new HTuple(), hv_Row = new HTuple();
    HTuple hv_Column = new HTuple(), hv_Angle = new HTuple();
    HTuple hv_Score = new HTuple(), hv_MovementImageToImage = new HTuple();
    HTuple hv_baseRightRow = new HTuple(), hv_baseRightColum = new HTuple();
    HTuple hv_baseRightRadian = new HTuple(), hv_baseRightLen1 = new HTuple();
    HTuple hv_baseRightLen2 = new HTuple(), hv_lineX1RightBase = new HTuple();
    HTuple hv_lineY1RightBase = new HTuple(), hv_lineX2RightBase = new HTuple();
    HTuple hv_lineY2RightBase = new HTuple(), hv_XsUsed = new HTuple();
    HTuple hv_YsUsed = new HTuple(), hv_XsIgnored = new HTuple();
    HTuple hv_YsIgnored = new HTuple(), hv_baseTopRow = new HTuple();
    HTuple hv_baseTopColumn = new HTuple(), hv_baseTopRadian = new HTuple();
    HTuple hv_baseTopLen1 = new HTuple(), hv_baseTopLen2 = new HTuple();
    HTuple hv_lineX1TopBase = new HTuple(), hv_lineY1TopBase = new HTuple();
    HTuple hv_lineX2TopBase = new HTuple(), hv_lineY2TopBase = new HTuple();
    HTuple hv_rowOrigin = new HTuple(), hv_colOrigin = new HTuple();
    HTuple hv_IsOverlapping = new HTuple(), hv_ptXOnPerpenducularDir = new HTuple();
    HTuple hv_ptYOnPerpenducularDir = new HTuple(), hv_FAI2_P1_LineStartX = new HTuple();
    HTuple hv_FAI2_P1_LineStartY = new HTuple(), hv_FAI2_P1_LineEndX = new HTuple();
    HTuple hv_FAI2_P1_LineEndY = new HTuple(), hv_FAI2_P2_LineStartX = new HTuple();
    HTuple hv_FAI2_P2_LineStartY = new HTuple(), hv_FAI2_P2_LineEndX = new HTuple();
    HTuple hv_FAI2_P2_LineEndY = new HTuple(), hv_FAI2_P3_LineStartX = new HTuple();
    HTuple hv_FAI2_P3_LineStartY = new HTuple(), hv_FAI2_P3_LineEndX = new HTuple();
    HTuple hv_FAI2_P3_LineEndY = new HTuple(), hv_rectFAI2Row = new HTuple();
    HTuple hv_rectFAI2Col = new HTuple(), hv_rectFAI2Radian = new HTuple();
    HTuple hv_rectFAI2Len1 = new HTuple(), hv_rectFAI2Len2 = new HTuple();
    HTuple hv_lineStartX_FAI2H = new HTuple(), hv_lineStartY_FAI2H = new HTuple();
    HTuple hv_lineEndX_FAI2H = new HTuple(), hv_lineEndY_FAI2H = new HTuple();
    HTuple hv_rowIntersect = new HTuple(), hv_colIntersect = new HTuple();
    HTuple hv_IsOverlapping1 = new HTuple(), hv_distanceWorld_P1 = new HTuple();
    HTuple hv_distancePixel = new HTuple(), hv_distanceWorld_P2 = new HTuple();
    HTuple hv_distanceWorld_P3 = new HTuple(), hv_rectFAI3Row = new HTuple();
    HTuple hv_rectFAI3Col = new HTuple(), hv_rectFAI3Radian = new HTuple();
    HTuple hv_rectFAI3Len1 = new HTuple(), hv_rectFAI3Len2 = new HTuple();
    HTuple hv_lineX1FAI3 = new HTuple(), hv_lineY1FAI3 = new HTuple();
    HTuple hv_lineX2FAI3 = new HTuple(), hv_lineY2FAI3 = new HTuple();
    HTuple hv_FAI3_P1_LineStartX = new HTuple(), hv_FAI3_P1_LineStartY = new HTuple();
    HTuple hv_FAI3_P1_LineEndX = new HTuple(), hv_FAI3_P1_LineEndY = new HTuple();
    HTuple hv_FAI3_P2_LineStartX = new HTuple(), hv_FAI3_P2_LineStartY = new HTuple();
    HTuple hv_FAI3_P2_LineEndX = new HTuple(), hv_FAI3_P2_LineEndY = new HTuple();
    HTuple hv_FAI3_P3_LineStartX = new HTuple(), hv_FAI3_P3_LineStartY = new HTuple();
    HTuple hv_FAI3_P3_LineEndX = new HTuple(), hv_FAI3_P3_LineEndY = new HTuple();
    HTuple hv_IsOverlapping2 = new HTuple(), hv_distanceWorld_FAI3_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI3_P2 = new HTuple(), hv_distanceWorld_FAI3_P3 = new HTuple();
    HTuple hv_rectFAI4Row = new HTuple(), hv_rectFAI4Col = new HTuple();
    HTuple hv_rectFAI4Radian = new HTuple(), hv_rectFAI4Len1 = new HTuple();
    HTuple hv_rectFAI4Len2 = new HTuple(), hv_lineX1FAI4 = new HTuple();
    HTuple hv_lineY1FAI4 = new HTuple(), hv_lineX2FAI4 = new HTuple();
    HTuple hv_lineY2FAI4 = new HTuple(), hv_distanceWorld_FAI4_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI4_P2 = new HTuple(), hv_distanceWorld_FAI4_P3 = new HTuple();
    HTuple hv_rectFAI5Row = new HTuple(), hv_rectFAI5Col = new HTuple();
    HTuple hv_rectFAI5Radian = new HTuple(), hv_rectFAI5Len1 = new HTuple();
    HTuple hv_rectFAI5Len2 = new HTuple(), hv_lineX1FAI5 = new HTuple();
    HTuple hv_lineY1FAI5 = new HTuple(), hv_lineX2FAI5 = new HTuple();
    HTuple hv_lineY2FAI5 = new HTuple(), hv_distanceWorld_FAI5_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI5_P2 = new HTuple(), hv_distanceWorld_FAI5_P3 = new HTuple();
    HTuple hv_rectFAI6Row = new HTuple(), hv_rectFAI6Col = new HTuple();
    HTuple hv_rectFAI6Radian = new HTuple(), hv_rectFAI6Len1 = new HTuple();
    HTuple hv_rectFAI6Len2 = new HTuple(), hv_lineX1FAI6 = new HTuple();
    HTuple hv_lineY1FAI6 = new HTuple(), hv_lineX2FAI6 = new HTuple();
    HTuple hv_lineY2FAI6 = new HTuple(), hv_FAI6_P1_LineStartX = new HTuple();
    HTuple hv_FAI6_P1_LineStartY = new HTuple(), hv_FAI6_P1_LineEndX = new HTuple();
    HTuple hv_FAI6_P1_LineEndY = new HTuple(), hv_FAI6_P2_LineStartX = new HTuple();
    HTuple hv_FAI6_P2_LineStartY = new HTuple(), hv_FAI6_P2_LineEndX = new HTuple();
    HTuple hv_FAI6_P2_LineEndY = new HTuple(), hv_FAI6_P3_LineStartX = new HTuple();
    HTuple hv_FAI6_P3_LineStartY = new HTuple(), hv_FAI6_P3_LineEndX = new HTuple();
    HTuple hv_FAI6_P3_LineEndY = new HTuple(), hv_distanceWorld_FAI6_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI6_P2 = new HTuple(), hv_distanceWorld_FAI6_P3 = new HTuple();
    HTuple hv_rectFAI9Row = new HTuple(), hv_rectFAI9Col = new HTuple();
    HTuple hv_rectFAI9Radian = new HTuple(), hv_rectFAI9Len1 = new HTuple();
    HTuple hv_rectFAI9Len2 = new HTuple(), hv_lineX1FAI9 = new HTuple();
    HTuple hv_lineY1FAI9 = new HTuple(), hv_lineX2FAI9 = new HTuple();
    HTuple hv_lineY2FAI9 = new HTuple(), hv_FAI9_P1_LineStartX = new HTuple();
    HTuple hv_FAI9_P1_LineStartY = new HTuple(), hv_FAI9_P1_LineEndX = new HTuple();
    HTuple hv_FAI9_P1_LineEndY = new HTuple(), hv_FAI9_P2_LineStartX = new HTuple();
    HTuple hv_FAI9_P2_LineStartY = new HTuple(), hv_FAI9_P2_LineEndX = new HTuple();
    HTuple hv_FAI9_P2_LineEndY = new HTuple(), hv_FAI9_P3_LineStartX = new HTuple();
    HTuple hv_FAI9_P3_LineStartY = new HTuple(), hv_FAI9_P3_LineEndX = new HTuple();
    HTuple hv_FAI9_P3_LineEndY = new HTuple(), hv_distanceWorld_FAI9_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI9_P2 = new HTuple(), hv_distanceWorld_FAI9_P3 = new HTuple();
    HTuple hv_rectFAI12Row = new HTuple(), hv_rectFAI12Col = new HTuple();
    HTuple hv_rectFAI12Radian = new HTuple(), hv_rectFAI12Len1 = new HTuple();
    HTuple hv_rectFAI12Len2 = new HTuple(), hv_lineX1FAI12 = new HTuple();
    HTuple hv_lineY1FAI12 = new HTuple(), hv_lineX2FAI12 = new HTuple();
    HTuple hv_lineY2FAI12 = new HTuple(), hv_FAI12_P1_LineStartX = new HTuple();
    HTuple hv_FAI12_P1_LineStartY = new HTuple(), hv_FAI12_P1_LineEndX = new HTuple();
    HTuple hv_FAI12_P1_LineEndY = new HTuple(), hv_FAI12_P2_LineStartX = new HTuple();
    HTuple hv_FAI12_P2_LineStartY = new HTuple(), hv_FAI12_P2_LineEndX = new HTuple();
    HTuple hv_FAI12_P2_LineEndY = new HTuple(), hv_distanceWorld_FAI12_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI12_P2 = new HTuple(), hv_rectFAI16Row = new HTuple();
    HTuple hv_rectFAI16Col = new HTuple(), hv_rectFAI16Radian = new HTuple();
    HTuple hv_rectFAI16Len1 = new HTuple(), hv_rectFAI16Len2 = new HTuple();
    HTuple hv_lineX1FAI16 = new HTuple(), hv_lineY1FAI16 = new HTuple();
    HTuple hv_lineX2FAI16 = new HTuple(), hv_lineY2FAI16 = new HTuple();
    HTuple hv_FAI16_P1_LineStartX = new HTuple(), hv_FAI16_P1_LineStartY = new HTuple();
    HTuple hv_FAI16_P1_LineEndX = new HTuple(), hv_FAI16_P1_LineEndY = new HTuple();
    HTuple hv_FAI16_P2_LineStartX = new HTuple(), hv_FAI16_P2_LineStartY = new HTuple();
    HTuple hv_FAI16_P2_LineEndX = new HTuple(), hv_FAI16_P2_LineEndY = new HTuple();
    HTuple hv_distanceWorld_FAI16_P1 = new HTuple(), hv_distanceWorld_FAI16_P2 = new HTuple();
    HTuple hv_rectFAI17Row = new HTuple(), hv_rectFAI17Col = new HTuple();
    HTuple hv_rectFAI17Radian = new HTuple(), hv_rectFAI17Len1 = new HTuple();
    HTuple hv_rectFAI17Len2 = new HTuple(), hv_lineX1FAI17 = new HTuple();
    HTuple hv_lineY1FAI17 = new HTuple(), hv_lineX2FAI17 = new HTuple();
    HTuple hv_lineY2FAI17 = new HTuple(), hv_FAI17_P1_LineStartX = new HTuple();
    HTuple hv_FAI17_P1_LineStartY = new HTuple(), hv_FAI17_P1_LineEndX = new HTuple();
    HTuple hv_FAI17_P1_LineEndY = new HTuple(), hv_FAI17_P2_LineStartX = new HTuple();
    HTuple hv_FAI17_P2_LineStartY = new HTuple(), hv_FAI17_P2_LineEndX = new HTuple();
    HTuple hv_FAI17_P2_LineEndY = new HTuple(), hv_distanceWorld_FAI17_P1 = new HTuple();
    HTuple hv_distanceWorld_FAI17_P2 = new HTuple(), hv_rectFAI19Row = new HTuple();
    HTuple hv_rectFAI19Col = new HTuple(), hv_rectFAI19Radian = new HTuple();
    HTuple hv_rectFAI19Len1 = new HTuple(), hv_rectFAI19Len2 = new HTuple();
    HTuple hv_lineX1FAI19 = new HTuple(), hv_lineY1FAI19 = new HTuple();
    HTuple hv_lineX2FAI19 = new HTuple(), hv_lineY2FAI19 = new HTuple();
    HTuple hv_FAI19_P1_LineStartX = new HTuple(), hv_FAI19_P1_LineStartY = new HTuple();
    HTuple hv_FAI19_P1_LineEndX = new HTuple(), hv_FAI19_P1_LineEndY = new HTuple();
    HTuple hv_FAI19_P2_LineStartX = new HTuple(), hv_FAI19_P2_LineStartY = new HTuple();
    HTuple hv_FAI19_P2_LineEndX = new HTuple(), hv_FAI19_P2_LineEndY = new HTuple();
    HTuple hv_distanceWorld_FAI19_P1 = new HTuple(), hv_distanceWorld_FAI19_P2 = new HTuple();
    HTuple hv_FAI20_P2_LineStartX = new HTuple(), hv_FAI20_P2_LineStartY = new HTuple();
    HTuple hv_FAI20_P2_LineEndX = new HTuple(), hv_FAI20_P2_LineEndY = new HTuple();
    HTuple hv_FAI20V_P1_LineStartX = new HTuple(), hv_FAI20V_P1_LineStartY = new HTuple();
    HTuple hv_FAI20V_P1_LineEndX = new HTuple(), hv_FAI20V_P1_LineEndY = new HTuple();
    HTuple hv_rowCenterTop = new HTuple(), hv_colCenterTop = new HTuple();
    HTuple hv_rectFAI20TRRow = new HTuple(), hv_rectFAI20TRCol = new HTuple();
    HTuple hv_rectFAI20TRRadian = new HTuple(), hv_rectFAI20TRLen1 = new HTuple();
    HTuple hv_rectFAI20TRLen2 = new HTuple(), hv_lineX1FAI20TR = new HTuple();
    HTuple hv_lineY1FAI20TR = new HTuple(), hv_lineX2FAI20TR = new HTuple();
    HTuple hv_lineY2FAI20TR = new HTuple(), hv_rectFAI20LFRow = new HTuple();
    HTuple hv_rectFAI20LFCol = new HTuple(), hv_rectFAI20LFRadian = new HTuple();
    HTuple hv_rectFAI20LFLen1 = new HTuple(), hv_rectFAI20LFLen2 = new HTuple();
    HTuple hv_lineX1FAI20LF = new HTuple(), hv_lineY1FAI20LF = new HTuple();
    HTuple hv_lineX2FAI20LF = new HTuple(), hv_lineY2FAI20LF = new HTuple();
    HTuple hv_distanceWorld_FAI20_1 = new HTuple(), hv_distanceWorld_FAI20_2_1 = new HTuple();
    HTuple hv_distancePixel_FAI20_2_1 = new HTuple(), hv_distanceWorld_FAI20_2_2 = new HTuple();
    HTuple hv_distancePixel_FAI20_2_2 = new HTuple(), hv_distanceWorld_FAI20_2 = new HTuple();
    HTuple hv_numOutputs = new HTuple(), hv_numOutputPixels = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_lineRegions);
    HOperatorSet.GenEmptyObj(out ho_FindLineRects);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Border);
    HOperatorSet.GenEmptyObj(out ho_rectBaseRight);
    HOperatorSet.GenEmptyObj(out ho_lineRegionRightBase);
    HOperatorSet.GenEmptyObj(out ho_rectBaseTop);
    HOperatorSet.GenEmptyObj(out ho_lineRegionTopBase);
    HOperatorSet.GenEmptyObj(out ho_Rectangle1);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    HOperatorSet.GenEmptyObj(out ho_findLineRegionFAI2);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_rectFAI3);
    HOperatorSet.GenEmptyObj(out ho_rectFAI4);
    HOperatorSet.GenEmptyObj(out ho_rect);
    HOperatorSet.GenEmptyObj(out ho_lineRegion1);
    HOperatorSet.GenEmptyObj(out ho_Cross);
    hv_outputs = new HTuple();
    hv_crossesXused = new HTuple();
    hv_crossesYused = new HTuple();
    hv_crossesXIgnored = new HTuple();
    hv_crossesYIgnored = new HTuple();
    hv_intersectXs = new HTuple();
    hv_intersectYs = new HTuple();
    hv_outputsPixel = new HTuple();

    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);
    HOperatorSet.DispObj(ho_Image, hv_ExpDefaultWinHandle);
    hv_mapToImage.Dispose();
    hv_mapToImage = 0;
    hv_mapToWorld.Dispose();
    hv_mapToWorld = 0;

    HOperatorSet.SetDraw(hv_ExpDefaultWinHandle, "margin");

    hv_crossSize.Dispose();
    hv_crossSize = 100;
    hv_numSubRects.Dispose();
    hv_numSubRects = 10;
    hv_ignorePortion.Dispose();
    hv_ignorePortion = 0.2;

    //init thresholds
    hv_ModelThreshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_ModelThreshold = hv_thresholds.TupleSelect(
        0);
    }
    hv_TopThreshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_TopThreshold = hv_thresholds.TupleSelect(
        1);
    }
    hv_RightThreshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_RightThreshold = hv_thresholds.TupleSelect(
        2);
    }
    hv_FAI2Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI2Threshold = hv_thresholds.TupleSelect(
        3);
    }
    hv_FAI3Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI3Threshold = hv_thresholds.TupleSelect(
        4);
    }
    hv_FAI4Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI4Threshold = hv_thresholds.TupleSelect(
        5);
    }
    hv_FAI5Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI5Threshold = hv_thresholds.TupleSelect(
        6);
    }
    hv_FAI6Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI6Threshold = hv_thresholds.TupleSelect(
        7);
    }
    hv_FAI9Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI9Threshold = hv_thresholds.TupleSelect(
        8);
    }
    hv_FAI12Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI12Threshold = hv_thresholds.TupleSelect(
        9);
    }
    hv_FAI16Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI16Threshold = hv_thresholds.TupleSelect(
        10);
    }
    hv_FAI17Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI17Threshold = hv_thresholds.TupleSelect(
        11);
    }
    hv_FAI19Threshold.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI19Threshold = hv_thresholds.TupleSelect(
        12);
    }
    hv_FAI20Threshold_up.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI20Threshold_up = hv_thresholds.TupleSelect(
        13);
    }
    hv_FAI20Threshold_down.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI20Threshold_down = hv_thresholds.TupleSelect(
        14);
    }

    hv_newWidth.Dispose();
    hv_newWidth = 5;


    //record find line points
    hv_crossesXused.Dispose();
    hv_crossesXused = new HTuple();
    hv_crossesYused.Dispose();
    hv_crossesYused = new HTuple();
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = new HTuple();
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = new HTuple();

    //record line-line intersections
    hv_intersectXs.Dispose();
    hv_intersectXs = new HTuple();
    hv_intersectYs.Dispose();
    hv_intersectYs = new HTuple();

    //outputs
    hv_outputs.Dispose();
    hv_outputs = new HTuple();
    hv_outputsPixel.Dispose();
    hv_outputsPixel = new HTuple();

    //set units and positions


    hv_FAI2_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI2_LEN_P1 = -4.583/hv_xCoeff;
    }
    hv_FAI2_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI2_LEN_P2 = -9.583/hv_xCoeff;
    }
    hv_FAI2_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI2_LEN_P3 = -14.583/hv_xCoeff;
    }

    hv_FAI3_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI3_LEN_P1 = -5.299/hv_xCoeff;
    }
    hv_FAI3_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI3_LEN_P2 = -9.299/hv_xCoeff;
    }
    hv_FAI3_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI3_LEN_P3 = -13.299/hv_xCoeff;
    }

    hv_FAI4_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI4_LEN_P1 = -5.299/hv_xCoeff;
    }
    hv_FAI4_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI4_LEN_P2 = -9.299/hv_xCoeff;
    }
    hv_FAI4_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI4_LEN_P3 = -13.299/hv_xCoeff;
    }

    hv_FAI5_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI5_LEN_P1 = -5.299/hv_xCoeff;
    }
    hv_FAI5_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI5_LEN_P2 = -9.299/hv_xCoeff;
    }
    hv_FAI5_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI5_LEN_P3 = -13.299/hv_xCoeff;
    }

    hv_FAI6_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI6_LEN_P1 = -22.024/hv_xCoeff;
    }
    hv_FAI6_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI6_LEN_P2 = -24.024/hv_xCoeff;
    }
    hv_FAI6_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI6_LEN_P3 = -26.024/hv_xCoeff;
    }

    hv_FAI9_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI9_LEN_P1 = -21.753/hv_xCoeff;
    }
    hv_FAI9_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI9_LEN_P2 = -23.753/hv_xCoeff;
    }
    hv_FAI9_LEN_P3.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI9_LEN_P3 = -25.753/hv_xCoeff;
    }


    hv_FAI12_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI12_LEN_P1 = 23.213/hv_yCoeff;
    }
    hv_FAI12_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI12_LEN_P2 = 34.97/hv_yCoeff;
    }

    hv_FAI16_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI16_LEN_P1 = 13.071/hv_yCoeff;
    }
    hv_FAI16_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI16_LEN_P2 = 20.213/hv_yCoeff;
    }

    hv_FAI17_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI17_LEN_P1 = 1.53/hv_yCoeff;
    }
    hv_FAI17_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI17_LEN_P2 = 9.827/hv_yCoeff;
    }

    hv_FAI19_LEN_P1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI19_LEN_P1 = 2.157/hv_yCoeff;
    }
    hv_FAI19_LEN_P2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI19_LEN_P2 = 13.791/hv_yCoeff;
    }

    hv_FAI20_LEN_X.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI20_LEN_X = -9.299/hv_xCoeff;
    }
    hv_FAI20_LEN_Y.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI20_LEN_Y = 7.886/hv_yCoeff;
    }



    //find model
    hv_modelPath.Dispose();
    hv_modelPath = "E:/Projects/3d/Hdevs/Image_20190918091134087";
    hv_Threshold.Dispose();
    hv_Threshold = 128;
    hv_rowModel.Dispose();
    hv_rowModel = 1171.5;
    hv_colModel.Dispose();
    hv_colModel = 3678.5;
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_0, 53.9, 1940.83, 3017.1, 4961.63);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);
    ho_Border.Dispose();
    HOperatorSet.ThresholdSubPix(ho_ImageReduced, out ho_Border, hv_ModelThreshold);
    hv_Row.Dispose();hv_Column.Dispose();hv_Angle.Dispose();hv_Score.Dispose();
    HOperatorSet.FindShapeModel(ho_ImageReduced, hv_ModelID, -0.39, 0.79, 0.5, 1, 
        0.5, "least_squares", 0, 0.9, out hv_Row, out hv_Column, out hv_Angle, out hv_Score);
    hv_MovementImageToImage.Dispose();
    HOperatorSet.VectorAngleToRigid(0, 0, 0, hv_Row, hv_Column, hv_Angle, out hv_MovementImageToImage);


    hv_baseRightRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseRightRow = 3614.64000000-hv_rowModel;
    }
    hv_baseRightColum.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseRightColum = 4804.56000000-hv_colModel;
    }
    hv_baseRightRadian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseRightRadian = (new HTuple(180)).TupleRad()
        ;
    }
    hv_baseRightLen1.Dispose();
    hv_baseRightLen1 = 287.58000000;
    hv_baseRightLen2.Dispose();
    hv_baseRightLen2 = 1070.83000000;


    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
        hv_baseRightLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_baseRightRow.Dispose();
    hv_baseRightRow = ExpTmpOutVar_0;
    hv_baseRightColum.Dispose();
    hv_baseRightColum = ExpTmpOutVar_1;
    hv_baseRightRadian.Dispose();
    hv_baseRightRadian = ExpTmpOutVar_2;
    hv_baseRightLen1.Dispose();
    hv_baseRightLen1 = ExpTmpOutVar_3;
    hv_baseRightLen2.Dispose();
    hv_baseRightLen2 = ExpTmpOutVar_4;
    }
    ho_rectBaseRight.Dispose();ho_lineRegionRightBase.Dispose();hv_lineX1RightBase.Dispose();hv_lineY1RightBase.Dispose();hv_lineX2RightBase.Dispose();hv_lineY2RightBase.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rectBaseRight, out ho_lineRegionRightBase, 
        "positive", hv_baseRightRow, hv_baseRightColum, hv_baseRightRadian, hv_baseRightLen1, 
        hv_baseRightLen2, hv_numSubRects, hv_TopThreshold, "first", hv_ignorePortion, 
        "true", 1, hv_Width, hv_Height, hv_newWidth, out hv_lineX1RightBase, out hv_lineY1RightBase, 
        out hv_lineX2RightBase, out hv_lineY2RightBase, out hv_XsUsed, out hv_YsUsed, 
        out hv_XsIgnored, out hv_YsIgnored);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }



    //find top base line
    hv_baseTopRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseTopRow = 162.42300000-hv_rowModel;
    }
    hv_baseTopColumn.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseTopColumn = 3614.30000000-hv_colModel;
    }
    hv_baseTopRadian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_baseTopRadian = (new HTuple(-90.00000000)).TupleRad()
        ;
    }
    hv_baseTopLen1.Dispose();
    hv_baseTopLen1 = 279.69400000;
    hv_baseTopLen2.Dispose();
    hv_baseTopLen2 = 627.82500000;

    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
        hv_baseTopLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_baseTopRow.Dispose();
    hv_baseTopRow = ExpTmpOutVar_0;
    hv_baseTopColumn.Dispose();
    hv_baseTopColumn = ExpTmpOutVar_1;
    hv_baseTopRadian.Dispose();
    hv_baseTopRadian = ExpTmpOutVar_2;
    hv_baseTopLen1.Dispose();
    hv_baseTopLen1 = ExpTmpOutVar_3;
    hv_baseTopLen2.Dispose();
    hv_baseTopLen2 = ExpTmpOutVar_4;
    }
    ho_rectBaseTop.Dispose();ho_lineRegionTopBase.Dispose();hv_lineX1TopBase.Dispose();hv_lineY1TopBase.Dispose();hv_lineX2TopBase.Dispose();hv_lineY2TopBase.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rectBaseTop, out ho_lineRegionTopBase, 
        "positive", hv_baseTopRow, hv_baseTopColumn, hv_baseTopRadian, hv_baseTopLen1, 
        hv_baseTopLen2, hv_numSubRects, hv_RightThreshold, "first", hv_ignorePortion, 
        "false", 1, hv_Width, hv_Height, hv_newWidth, out hv_lineX1TopBase, out hv_lineY1TopBase, 
        out hv_lineX2TopBase, out hv_lineY2TopBase, out hv_XsUsed, out hv_YsUsed, 
        out hv_XsIgnored, out hv_YsIgnored);
    ho_FindLineRects.Dispose();
    HOperatorSet.ConcatObj(ho_rectBaseRight, ho_rectBaseTop, out ho_FindLineRects
        );
    //concat_obj (lineRegionRightBase, lineRegionTopBase, lineRegions)

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }



    //make origin
    hv_rowOrigin.Dispose();hv_colOrigin.Dispose();hv_IsOverlapping.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1RightBase, hv_lineX1RightBase, hv_lineY2RightBase, 
        hv_lineX2RightBase, hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
        hv_lineX2TopBase, out hv_rowOrigin, out hv_colOrigin, out hv_IsOverlapping);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colOrigin);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowOrigin);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }

    //rectify bases
    hv_ptXOnPerpenducularDir.Dispose();hv_ptYOnPerpenducularDir.Dispose();
    get_perpendicular_line_that_passes(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, 
        hv_lineY2TopBase, hv_colOrigin, hv_rowOrigin, out hv_ptXOnPerpenducularDir, 
        out hv_ptYOnPerpenducularDir);
    hv_lineX1RightBase.Dispose();
    hv_lineX1RightBase = new HTuple(hv_colOrigin);
    hv_lineY1RightBase.Dispose();
    hv_lineY1RightBase = new HTuple(hv_rowOrigin);
    hv_lineX2RightBase.Dispose();
    hv_lineX2RightBase = new HTuple(hv_ptXOnPerpenducularDir);
    hv_lineY2RightBase.Dispose();
    hv_lineY2RightBase = new HTuple(hv_ptYOnPerpenducularDir);

    //***********
    hv_Angle.Dispose();
    HOperatorSet.AngleLl(hv_lineY1RightBase, hv_lineX1RightBase, hv_lineY2RightBase, 
        hv_lineX2RightBase, hv_lineY1TopBase, hv_lineX1TopBase, hv_lineY2TopBase, 
        hv_lineX2TopBase, out hv_Angle);
    ho_lineRegionRightBase.Dispose();
    GenLineRegion(out ho_lineRegionRightBase, hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, 5120, 5120);
    ho_lineRegions.Dispose();
    HOperatorSet.ConcatObj(ho_lineRegionRightBase, ho_lineRegionTopBase, out ho_lineRegions
        );

    //*************
    //***************************************************FAI2***********************************
    //make vertical grids
    hv_FAI2_P1_LineStartX.Dispose();hv_FAI2_P1_LineStartY.Dispose();hv_FAI2_P1_LineEndX.Dispose();hv_FAI2_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI2_P1_LineStartX, out hv_FAI2_P1_LineStartY, out hv_FAI2_P1_LineEndX, 
        out hv_FAI2_P1_LineEndY);
    hv_FAI2_P2_LineStartX.Dispose();hv_FAI2_P2_LineStartY.Dispose();hv_FAI2_P2_LineEndX.Dispose();hv_FAI2_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI2_P2_LineStartX, out hv_FAI2_P2_LineStartY, out hv_FAI2_P2_LineEndX, 
        out hv_FAI2_P2_LineEndY);
    hv_FAI2_P3_LineStartX.Dispose();hv_FAI2_P3_LineStartY.Dispose();hv_FAI2_P3_LineEndX.Dispose();hv_FAI2_P3_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI2_LEN_P3, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI2_P3_LineStartX, out hv_FAI2_P3_LineStartY, out hv_FAI2_P3_LineEndX, 
        out hv_FAI2_P3_LineEndY);

    //make H line for FAI2
    hv_rectFAI2Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI2Row = 2173.39000000-hv_rowModel;
    }
    hv_rectFAI2Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI2Col = 3168.38000000-hv_colModel;
    }
    hv_rectFAI2Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI2Radian = (new HTuple(-91)).TupleRad()
        ;
    }
    hv_rectFAI2Len1.Dispose();
    hv_rectFAI2Len1 = 200.89500000;
    hv_rectFAI2Len2.Dispose();
    hv_rectFAI2Len2 = 200.18000000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI2Row, hv_rectFAI2Col, hv_rectFAI2Radian, hv_rectFAI2Len1, 
        hv_rectFAI2Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI2Row.Dispose();
    hv_rectFAI2Row = ExpTmpOutVar_0;
    hv_rectFAI2Col.Dispose();
    hv_rectFAI2Col = ExpTmpOutVar_1;
    hv_rectFAI2Radian.Dispose();
    hv_rectFAI2Radian = ExpTmpOutVar_2;
    hv_rectFAI2Len1.Dispose();
    hv_rectFAI2Len1 = ExpTmpOutVar_3;
    hv_rectFAI2Len2.Dispose();
    hv_rectFAI2Len2 = ExpTmpOutVar_4;
    }
    ho_Rectangle1.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle1, hv_rectFAI2Row, hv_rectFAI2Col, 
        hv_rectFAI2Radian, hv_rectFAI2Len1, hv_rectFAI2Len2);

    ho_Rectangle.Dispose();
    HOperatorSet.GenRectangle2(out ho_Rectangle, hv_rectFAI2Row, hv_rectFAI2Col, 
        hv_rectFAI2Radian, hv_rectFAI2Len1, hv_rectFAI2Len2);
    ho_findLineRegionFAI2.Dispose();ho_lineRegion.Dispose();hv_lineStartX_FAI2H.Dispose();hv_lineStartY_FAI2H.Dispose();hv_lineEndX_FAI2H.Dispose();hv_lineEndY_FAI2H.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_findLineRegionFAI2, out ho_lineRegion, 
        "positive", hv_rectFAI2Row, hv_rectFAI2Col, hv_rectFAI2Radian, hv_rectFAI2Len1, 
        hv_rectFAI2Len2, hv_numSubRects, hv_FAI2Threshold, "first", 0.4, "false", 
        1, hv_Width, hv_Height, hv_newWidth, out hv_lineStartX_FAI2H, out hv_lineStartY_FAI2H, 
        out hv_lineEndX_FAI2H, out hv_lineEndY_FAI2H, out hv_XsUsed, out hv_YsUsed, 
        out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_findLineRegionFAI2, out ExpTmpOutVar_0
        );
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //FAI2-P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping1.Dispose();
    HOperatorSet.IntersectionLines(hv_lineStartY_FAI2H, hv_lineStartX_FAI2H, hv_lineEndY_FAI2H, 
        hv_lineEndX_FAI2H, hv_FAI2_P1_LineStartY, hv_FAI2_P1_LineStartX, hv_FAI2_P1_LineEndY, 
        hv_FAI2_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping1);
    hv_distanceWorld_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_P1+(hv_Biases.TupleSelect(0)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }

    //FAI2-P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping1.Dispose();
    HOperatorSet.IntersectionLines(hv_lineStartY_FAI2H, hv_lineStartX_FAI2H, hv_lineEndY_FAI2H, 
        hv_lineEndX_FAI2H, hv_FAI2_P2_LineStartY, hv_FAI2_P2_LineStartX, hv_FAI2_P2_LineEndY, 
        hv_FAI2_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping1);
    hv_distanceWorld_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_P2+(hv_Biases.TupleSelect(1)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //FAI2-P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping1.Dispose();
    HOperatorSet.IntersectionLines(hv_lineStartY_FAI2H, hv_lineStartX_FAI2H, hv_lineEndY_FAI2H, 
        hv_lineEndX_FAI2H, hv_FAI2_P3_LineStartY, hv_FAI2_P3_LineStartX, hv_FAI2_P3_LineEndY, 
        hv_FAI2_P3_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping1);
    hv_distanceWorld_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_P3+(hv_Biases.TupleSelect(2)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //*********************************************FAI3************************************
    hv_rectFAI3Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI3Row = 2269.30000000-hv_rowModel;
    }
    hv_rectFAI3Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI3Col = 3612.45000000-hv_colModel;
    }
    hv_rectFAI3Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI3Radian = (new HTuple(90)).TupleRad()
        ;
    }
    hv_rectFAI3Len1.Dispose();
    hv_rectFAI3Len1 = 175.88000000;
    hv_rectFAI3Len2.Dispose();
    hv_rectFAI3Len2 = 623.96700000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI3Row, hv_rectFAI3Col, hv_rectFAI3Radian, hv_rectFAI3Len1, 
        hv_rectFAI3Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI3Row.Dispose();
    hv_rectFAI3Row = ExpTmpOutVar_0;
    hv_rectFAI3Col.Dispose();
    hv_rectFAI3Col = ExpTmpOutVar_1;
    hv_rectFAI3Radian.Dispose();
    hv_rectFAI3Radian = ExpTmpOutVar_2;
    hv_rectFAI3Len1.Dispose();
    hv_rectFAI3Len1 = ExpTmpOutVar_3;
    hv_rectFAI3Len2.Dispose();
    hv_rectFAI3Len2 = ExpTmpOutVar_4;
    }
    ho_rectFAI3.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI3.Dispose();hv_lineY1FAI3.Dispose();hv_lineX2FAI3.Dispose();hv_lineY2FAI3.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rectFAI3, out ho_lineRegion, "positive", 
        hv_rectFAI3Row, hv_rectFAI3Col, hv_rectFAI3Radian, hv_rectFAI3Len1, hv_rectFAI3Len2, 
        hv_numSubRects, hv_FAI3Threshold, "first", hv_ignorePortion, "false", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI3, out hv_lineY1FAI3, out hv_lineX2FAI3, 
        out hv_lineY2FAI3, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI3, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate base right
    hv_FAI3_P1_LineStartX.Dispose();hv_FAI3_P1_LineStartY.Dispose();hv_FAI3_P1_LineEndX.Dispose();hv_FAI3_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI3_P1_LineStartX, out hv_FAI3_P1_LineStartY, out hv_FAI3_P1_LineEndX, 
        out hv_FAI3_P1_LineEndY);
    hv_FAI3_P2_LineStartX.Dispose();hv_FAI3_P2_LineStartY.Dispose();hv_FAI3_P2_LineEndX.Dispose();hv_FAI3_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI3_P2_LineStartX, out hv_FAI3_P2_LineStartY, out hv_FAI3_P2_LineEndX, 
        out hv_FAI3_P2_LineEndY);
    hv_FAI3_P3_LineStartX.Dispose();hv_FAI3_P3_LineStartY.Dispose();hv_FAI3_P3_LineEndX.Dispose();hv_FAI3_P3_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI3_LEN_P3, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI3_P3_LineStartX, out hv_FAI3_P3_LineStartY, out hv_FAI3_P3_LineEndX, 
        out hv_FAI3_P3_LineEndY);
    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI3, hv_lineX1FAI3, hv_lineY2FAI3, hv_lineX2FAI3, 
        hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, hv_FAI3_P1_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI3_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI3_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI3_P1+(hv_Biases.TupleSelect(3)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI3, hv_lineX1FAI3, hv_lineY2FAI3, hv_lineX2FAI3, 
        hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, hv_FAI3_P2_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI3_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI3_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI3_P2+(hv_Biases.TupleSelect(4)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI3, hv_lineX1FAI3, hv_lineY2FAI3, hv_lineX2FAI3, 
        hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, hv_FAI3_P3_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI3_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI3_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI3_P3+(hv_Biases.TupleSelect(5)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //**********************************************FAI4*******************************
    hv_rectFAI4Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI4Row = 4712.30000000-hv_rowModel;
    }
    hv_rectFAI4Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI4Col = 3567.21000000-hv_colModel;
    }
    hv_rectFAI4Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI4Radian = (new HTuple(90)).TupleRad()
        ;
    }
    hv_rectFAI4Len1.Dispose();
    hv_rectFAI4Len1 = 107.89900000;
    hv_rectFAI4Len2.Dispose();
    hv_rectFAI4Len2 = 559.30000000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI4Row, hv_rectFAI4Col, hv_rectFAI4Radian, hv_rectFAI4Len1, 
        hv_rectFAI4Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI4Row.Dispose();
    hv_rectFAI4Row = ExpTmpOutVar_0;
    hv_rectFAI4Col.Dispose();
    hv_rectFAI4Col = ExpTmpOutVar_1;
    hv_rectFAI4Radian.Dispose();
    hv_rectFAI4Radian = ExpTmpOutVar_2;
    hv_rectFAI4Len1.Dispose();
    hv_rectFAI4Len1 = ExpTmpOutVar_3;
    hv_rectFAI4Len2.Dispose();
    hv_rectFAI4Len2 = ExpTmpOutVar_4;
    }
    ho_rectFAI4.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI4.Dispose();hv_lineY1FAI4.Dispose();hv_lineX2FAI4.Dispose();hv_lineY2FAI4.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rectFAI4, out ho_lineRegion, "negative", 
        hv_rectFAI4Row, hv_rectFAI4Col, hv_rectFAI4Radian, hv_rectFAI4Len1, hv_rectFAI4Len2, 
        hv_numSubRects, hv_FAI4Threshold, "first", hv_ignorePortion, "false", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI4, out hv_lineY1FAI4, out hv_lineX2FAI4, 
        out hv_lineY2FAI4, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rectFAI4, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, hv_lineX2FAI4, 
        hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, hv_FAI3_P1_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI4_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI4_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI4_P1+(hv_Biases.TupleSelect(6)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, hv_lineX2FAI4, 
        hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, hv_FAI3_P2_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI4_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI4_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI4_P2+(hv_Biases.TupleSelect(7)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI4, hv_lineX1FAI4, hv_lineY2FAI4, hv_lineX2FAI4, 
        hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, hv_FAI3_P3_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI4_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI4_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI4_P3+(hv_Biases.TupleSelect(8)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //************************************FAI 5***************************************
    hv_rectFAI5Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI5Row = 4890.45000000-hv_rowModel;
    }
    hv_rectFAI5Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI5Col = 3599.13000000-hv_colModel;
    }
    hv_rectFAI5Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI5Radian = (new HTuple(89)).TupleRad()
        ;
    }
    hv_rectFAI5Len1.Dispose();
    hv_rectFAI5Len1 = 156.70400000;
    hv_rectFAI5Len2.Dispose();
    hv_rectFAI5Len2 = 970.77200000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI5Row, hv_rectFAI5Col, hv_rectFAI5Radian, hv_rectFAI5Len1, 
        hv_rectFAI5Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI5Row.Dispose();
    hv_rectFAI5Row = ExpTmpOutVar_0;
    hv_rectFAI5Col.Dispose();
    hv_rectFAI5Col = ExpTmpOutVar_1;
    hv_rectFAI5Radian.Dispose();
    hv_rectFAI5Radian = ExpTmpOutVar_2;
    hv_rectFAI5Len1.Dispose();
    hv_rectFAI5Len1 = ExpTmpOutVar_3;
    hv_rectFAI5Len2.Dispose();
    hv_rectFAI5Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI5.Dispose();hv_lineY1FAI5.Dispose();hv_lineX2FAI5.Dispose();hv_lineY2FAI5.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI5Row, hv_rectFAI5Col, hv_rectFAI5Radian, hv_rectFAI5Len1, hv_rectFAI5Len2, 
        hv_numSubRects, hv_FAI5Threshold, "first", hv_ignorePortion, "false", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI5, out hv_lineY1FAI5, out hv_lineX2FAI5, 
        out hv_lineY2FAI5, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, hv_lineX2FAI5, 
        hv_FAI3_P1_LineStartY, hv_FAI3_P1_LineStartX, hv_FAI3_P1_LineEndY, hv_FAI3_P1_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI5_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI5_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI5_P1+(hv_Biases.TupleSelect(9)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, hv_lineX2FAI5, 
        hv_FAI3_P2_LineStartY, hv_FAI3_P2_LineStartX, hv_FAI3_P2_LineEndY, hv_FAI3_P2_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI5_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI5_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI5_P2+(hv_Biases.TupleSelect(10)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI5, hv_lineX1FAI5, hv_lineY2FAI5, hv_lineX2FAI5, 
        hv_FAI3_P3_LineStartY, hv_FAI3_P3_LineStartX, hv_FAI3_P3_LineEndY, hv_FAI3_P3_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI5_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI5_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI5_P3+(hv_Biases.TupleSelect(11)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }



    //************************************FAI 6******************************************
    hv_rectFAI6Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI6Row = 3017.82000000-hv_rowModel;
    }
    hv_rectFAI6Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI6Col = 1710.50000000-hv_colModel;
    }
    hv_rectFAI6Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI6Radian = (new HTuple(88)).TupleRad()
        ;
    }
    hv_rectFAI6Len1.Dispose();
    hv_rectFAI6Len1 = 101.93600000;
    hv_rectFAI6Len2.Dispose();
    hv_rectFAI6Len2 = 370.58900000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI6Row, hv_rectFAI6Col, hv_rectFAI6Radian, hv_rectFAI6Len1, 
        hv_rectFAI6Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI6Row.Dispose();
    hv_rectFAI6Row = ExpTmpOutVar_0;
    hv_rectFAI6Col.Dispose();
    hv_rectFAI6Col = ExpTmpOutVar_1;
    hv_rectFAI6Radian.Dispose();
    hv_rectFAI6Radian = ExpTmpOutVar_2;
    hv_rectFAI6Len1.Dispose();
    hv_rectFAI6Len1 = ExpTmpOutVar_3;
    hv_rectFAI6Len2.Dispose();
    hv_rectFAI6Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI6.Dispose();hv_lineY1FAI6.Dispose();hv_lineX2FAI6.Dispose();hv_lineY2FAI6.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI6Row, hv_rectFAI6Col, hv_rectFAI6Radian, hv_rectFAI6Len1, hv_rectFAI6Len2, 
        hv_numSubRects, hv_FAI6Threshold, "first", hv_ignorePortion, "false", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI6, out hv_lineY1FAI6, out hv_lineX2FAI6, 
        out hv_lineY2FAI6, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate base right
    hv_FAI6_P1_LineStartX.Dispose();hv_FAI6_P1_LineStartY.Dispose();hv_FAI6_P1_LineEndX.Dispose();hv_FAI6_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI6_P1_LineStartX, out hv_FAI6_P1_LineStartY, out hv_FAI6_P1_LineEndX, 
        out hv_FAI6_P1_LineEndY);
    hv_FAI6_P2_LineStartX.Dispose();hv_FAI6_P2_LineStartY.Dispose();hv_FAI6_P2_LineEndX.Dispose();hv_FAI6_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI6_P2_LineStartX, out hv_FAI6_P2_LineStartY, out hv_FAI6_P2_LineEndX, 
        out hv_FAI6_P2_LineEndY);
    hv_FAI6_P3_LineStartX.Dispose();hv_FAI6_P3_LineStartY.Dispose();hv_FAI6_P3_LineEndX.Dispose();hv_FAI6_P3_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI6_LEN_P3, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI6_P3_LineStartX, out hv_FAI6_P3_LineStartY, out hv_FAI6_P3_LineEndX, 
        out hv_FAI6_P3_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, hv_lineX2FAI6, 
        hv_FAI6_P1_LineStartY, hv_FAI6_P1_LineStartX, hv_FAI6_P1_LineEndY, hv_FAI6_P1_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI6_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI6_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI6_P1+(hv_Biases.TupleSelect(12)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, hv_lineX2FAI6, 
        hv_FAI6_P2_LineStartY, hv_FAI6_P2_LineStartX, hv_FAI6_P2_LineEndY, hv_FAI6_P2_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI6_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI6_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI6_P2+(hv_Biases.TupleSelect(13)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI6, hv_lineX1FAI6, hv_lineY2FAI6, hv_lineX2FAI6, 
        hv_FAI6_P3_LineStartY, hv_FAI6_P3_LineStartX, hv_FAI6_P3_LineEndY, hv_FAI6_P3_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI6_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI6_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI6_P3+(hv_Biases.TupleSelect(14)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //************************************FAI9********************************************
    hv_rectFAI9Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI9Row = 1584.57000000-hv_rowModel;
    }
    hv_rectFAI9Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI9Col = 1744.61000000-hv_colModel;
    }
    hv_rectFAI9Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI9Radian = (new HTuple(-90)).TupleRad()
        ;
    }
    hv_rectFAI9Len1.Dispose();
    hv_rectFAI9Len1 = 97.95910000;
    hv_rectFAI9Len2.Dispose();
    hv_rectFAI9Len2 = 275.13700000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI9Row, hv_rectFAI9Col, hv_rectFAI9Radian, hv_rectFAI9Len1, 
        hv_rectFAI9Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI9Row.Dispose();
    hv_rectFAI9Row = ExpTmpOutVar_0;
    hv_rectFAI9Col.Dispose();
    hv_rectFAI9Col = ExpTmpOutVar_1;
    hv_rectFAI9Radian.Dispose();
    hv_rectFAI9Radian = ExpTmpOutVar_2;
    hv_rectFAI9Len1.Dispose();
    hv_rectFAI9Len1 = ExpTmpOutVar_3;
    hv_rectFAI9Len2.Dispose();
    hv_rectFAI9Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI9.Dispose();hv_lineY1FAI9.Dispose();hv_lineX2FAI9.Dispose();hv_lineY2FAI9.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI9Row, hv_rectFAI9Col, hv_rectFAI9Radian, hv_rectFAI9Len1, hv_rectFAI9Len2, 
        hv_numSubRects, hv_FAI9Threshold, "first", hv_ignorePortion, "false", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI9, out hv_lineY1FAI9, out hv_lineX2FAI9, 
        out hv_lineY2FAI9, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate base right
    hv_FAI9_P1_LineStartX.Dispose();hv_FAI9_P1_LineStartY.Dispose();hv_FAI9_P1_LineEndX.Dispose();hv_FAI9_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI9_P1_LineStartX, out hv_FAI9_P1_LineStartY, out hv_FAI9_P1_LineEndX, 
        out hv_FAI9_P1_LineEndY);
    hv_FAI9_P2_LineStartX.Dispose();hv_FAI9_P2_LineStartY.Dispose();hv_FAI9_P2_LineEndX.Dispose();hv_FAI9_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI9_P2_LineStartX, out hv_FAI9_P2_LineStartY, out hv_FAI9_P2_LineEndX, 
        out hv_FAI9_P2_LineEndY);
    hv_FAI9_P3_LineStartX.Dispose();hv_FAI9_P3_LineStartY.Dispose();hv_FAI9_P3_LineEndX.Dispose();hv_FAI9_P3_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI9_LEN_P3, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI9_P3_LineStartX, out hv_FAI9_P3_LineStartY, out hv_FAI9_P3_LineEndX, 
        out hv_FAI9_P3_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, hv_lineX2FAI9, 
        hv_FAI9_P1_LineStartY, hv_FAI9_P1_LineStartX, hv_FAI9_P1_LineEndY, hv_FAI9_P1_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI9_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI9_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI9_P1+(hv_Biases.TupleSelect(15)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, hv_lineX2FAI9, 
        hv_FAI9_P2_LineStartY, hv_FAI9_P2_LineStartX, hv_FAI9_P2_LineEndY, hv_FAI9_P2_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI9_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI9_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI9_P2+(hv_Biases.TupleSelect(16)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P3
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI9, hv_lineX1FAI9, hv_lineY2FAI9, hv_lineX2FAI9, 
        hv_FAI9_P3_LineStartY, hv_FAI9_P3_LineStartX, hv_FAI9_P3_LineEndY, hv_FAI9_P3_LineEndX, 
        out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI9_P3.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1TopBase, hv_lineY1TopBase, hv_lineX2TopBase, hv_lineY2TopBase, 
        hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI9_P3, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI9_P3+(hv_Biases.TupleSelect(17)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //*****************************FAI12**************************
    hv_rectFAI12Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI12Row = 3817.80000000-hv_rowModel;
    }
    hv_rectFAI12Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI12Col = 2372.51000000-hv_colModel;
    }
    hv_rectFAI12Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI12Radian = (new HTuple(0)).TupleRad()
        ;
    }
    hv_rectFAI12Len1.Dispose();
    hv_rectFAI12Len1 = 209.09700000;
    hv_rectFAI12Len2.Dispose();
    hv_rectFAI12Len2 = 477.84200000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI12Row, hv_rectFAI12Col, hv_rectFAI12Radian, hv_rectFAI12Len1, 
        hv_rectFAI12Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI12Row.Dispose();
    hv_rectFAI12Row = ExpTmpOutVar_0;
    hv_rectFAI12Col.Dispose();
    hv_rectFAI12Col = ExpTmpOutVar_1;
    hv_rectFAI12Radian.Dispose();
    hv_rectFAI12Radian = ExpTmpOutVar_2;
    hv_rectFAI12Len1.Dispose();
    hv_rectFAI12Len1 = ExpTmpOutVar_3;
    hv_rectFAI12Len2.Dispose();
    hv_rectFAI12Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI12.Dispose();hv_lineY1FAI12.Dispose();hv_lineX2FAI12.Dispose();hv_lineY2FAI12.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI12Row, hv_rectFAI12Col, hv_rectFAI12Radian, hv_rectFAI12Len1, hv_rectFAI12Len2, 
        hv_numSubRects, hv_FAI12Threshold, "first", hv_ignorePortion, "true", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI12, out hv_lineY1FAI12, 
        out hv_lineX2FAI12, out hv_lineY2FAI12, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
        out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate TOP right
    hv_FAI12_P1_LineStartX.Dispose();hv_FAI12_P1_LineStartY.Dispose();hv_FAI12_P1_LineEndX.Dispose();hv_FAI12_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI12_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI12_P1_LineStartX, out hv_FAI12_P1_LineStartY, out hv_FAI12_P1_LineEndX, 
        out hv_FAI12_P1_LineEndY);
    hv_FAI12_P2_LineStartX.Dispose();hv_FAI12_P2_LineStartY.Dispose();hv_FAI12_P2_LineEndX.Dispose();hv_FAI12_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI12_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI12_P2_LineStartX, out hv_FAI12_P2_LineStartY, out hv_FAI12_P2_LineEndX, 
        out hv_FAI12_P2_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI12, hv_lineX1FAI12, hv_lineY2FAI12, 
        hv_lineX2FAI12, hv_FAI12_P1_LineStartY, hv_FAI12_P1_LineStartX, hv_FAI12_P1_LineEndY, 
        hv_FAI12_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI12_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI12_P1, 
        out hv_distancePixel);
    //***************
    ho_lineRegion1.Dispose();
    GenLineRegion(out ho_lineRegion1, hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, 5120, 5120);
    ho_Cross.Dispose();
    HOperatorSet.GenCrossContourXld(out ho_Cross, hv_rowIntersect, hv_colIntersect, 
        300, hv_Angle);
    //**************
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI12_P1+(hv_Biases.TupleSelect(18)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI12, hv_lineX1FAI12, hv_lineY2FAI12, 
        hv_lineX2FAI12, hv_FAI12_P2_LineStartY, hv_FAI12_P2_LineStartX, hv_FAI12_P2_LineEndY, 
        hv_FAI12_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI12_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI12_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI12_P2+(hv_Biases.TupleSelect(19)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //********************************FAI16*************************
    hv_rectFAI16Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI16Row = 2276.47000000-hv_rowModel;
    }
    hv_rectFAI16Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI16Col = 992.65500000-hv_colModel;
    }
    hv_rectFAI16Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI16Radian = (new HTuple(-1)).TupleRad()
        ;
    }
    hv_rectFAI16Len1.Dispose();
    hv_rectFAI16Len1 = 175.95600000;
    hv_rectFAI16Len2.Dispose();
    hv_rectFAI16Len2 = 391.84500000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI16Row, hv_rectFAI16Col, hv_rectFAI16Radian, hv_rectFAI16Len1, 
        hv_rectFAI16Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI16Row.Dispose();
    hv_rectFAI16Row = ExpTmpOutVar_0;
    hv_rectFAI16Col.Dispose();
    hv_rectFAI16Col = ExpTmpOutVar_1;
    hv_rectFAI16Radian.Dispose();
    hv_rectFAI16Radian = ExpTmpOutVar_2;
    hv_rectFAI16Len1.Dispose();
    hv_rectFAI16Len1 = ExpTmpOutVar_3;
    hv_rectFAI16Len2.Dispose();
    hv_rectFAI16Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI16.Dispose();hv_lineY1FAI16.Dispose();hv_lineX2FAI16.Dispose();hv_lineY2FAI16.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI16Row, hv_rectFAI16Col, hv_rectFAI16Radian, hv_rectFAI16Len1, hv_rectFAI16Len2, 
        hv_numSubRects, hv_FAI16Threshold, "first", hv_ignorePortion, "true", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI16, out hv_lineY1FAI16, 
        out hv_lineX2FAI16, out hv_lineY2FAI16, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
        out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate base top
    hv_FAI16_P1_LineStartX.Dispose();hv_FAI16_P1_LineStartY.Dispose();hv_FAI16_P1_LineEndX.Dispose();hv_FAI16_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI16_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI16_P1_LineStartX, out hv_FAI16_P1_LineStartY, out hv_FAI16_P1_LineEndX, 
        out hv_FAI16_P1_LineEndY);
    hv_FAI16_P2_LineStartX.Dispose();hv_FAI16_P2_LineStartY.Dispose();hv_FAI16_P2_LineEndX.Dispose();hv_FAI16_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI16_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI16_P2_LineStartX, out hv_FAI16_P2_LineStartY, out hv_FAI16_P2_LineEndX, 
        out hv_FAI16_P2_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI16, hv_lineX1FAI16, hv_lineY2FAI16, 
        hv_lineX2FAI16, hv_FAI16_P1_LineStartY, hv_FAI16_P1_LineStartX, hv_FAI16_P1_LineEndY, 
        hv_FAI16_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI16_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI16_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI16_P1+(hv_Biases.TupleSelect(20)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI16, hv_lineX1FAI16, hv_lineY2FAI16, 
        hv_lineX2FAI16, hv_FAI16_P2_LineStartY, hv_FAI16_P2_LineStartX, hv_FAI16_P2_LineEndY, 
        hv_FAI16_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI16_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI16_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI16_P2+(hv_Biases.TupleSelect(21)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //*************************FAI17*******************************
    hv_rectFAI17Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI17Row = 1109.27300000-hv_rowModel;
    }
    hv_rectFAI17Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI17Col = 2644.21000000-hv_colModel;
    }
    hv_rectFAI17Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI17Radian = (new HTuple(0.5)).TupleRad()
        ;
    }
    hv_rectFAI17Len1.Dispose();
    hv_rectFAI17Len1 = 191.07100000;
    hv_rectFAI17Len2.Dispose();
    hv_rectFAI17Len2 = 356.53500000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI17Row, hv_rectFAI17Col, hv_rectFAI17Radian, hv_rectFAI17Len1, 
        hv_rectFAI17Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI17Row.Dispose();
    hv_rectFAI17Row = ExpTmpOutVar_0;
    hv_rectFAI17Col.Dispose();
    hv_rectFAI17Col = ExpTmpOutVar_1;
    hv_rectFAI17Radian.Dispose();
    hv_rectFAI17Radian = ExpTmpOutVar_2;
    hv_rectFAI17Len1.Dispose();
    hv_rectFAI17Len1 = ExpTmpOutVar_3;
    hv_rectFAI17Len2.Dispose();
    hv_rectFAI17Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI17.Dispose();hv_lineY1FAI17.Dispose();hv_lineX2FAI17.Dispose();hv_lineY2FAI17.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI17Row, hv_rectFAI17Col, hv_rectFAI17Radian, hv_rectFAI17Len1, hv_rectFAI17Len2, 
        hv_numSubRects, hv_FAI17Threshold, "first", hv_ignorePortion, "true", 1, 
        hv_Width, hv_Height, hv_newWidth, out hv_lineX1FAI17, out hv_lineY1FAI17, 
        out hv_lineX2FAI17, out hv_lineY2FAI17, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
        out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate top base
    hv_FAI17_P1_LineStartX.Dispose();hv_FAI17_P1_LineStartY.Dispose();hv_FAI17_P1_LineEndX.Dispose();hv_FAI17_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI17_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI17_P1_LineStartX, out hv_FAI17_P1_LineStartY, out hv_FAI17_P1_LineEndX, 
        out hv_FAI17_P1_LineEndY);
    hv_FAI17_P2_LineStartX.Dispose();hv_FAI17_P2_LineStartY.Dispose();hv_FAI17_P2_LineEndX.Dispose();hv_FAI17_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI17_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI17_P2_LineStartX, out hv_FAI17_P2_LineStartY, out hv_FAI17_P2_LineEndX, 
        out hv_FAI17_P2_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI17, hv_lineX1FAI17, hv_lineY2FAI17, 
        hv_lineX2FAI17, hv_FAI17_P1_LineStartY, hv_FAI17_P1_LineStartX, hv_FAI17_P1_LineEndY, 
        hv_FAI17_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI17_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI17_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI17_P1+(hv_Biases.TupleSelect(22)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI17, hv_lineX1FAI17, hv_lineY2FAI17, 
        hv_lineX2FAI17, hv_FAI17_P2_LineStartY, hv_FAI17_P2_LineStartX, hv_FAI17_P2_LineEndY, 
        hv_FAI17_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI17_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI17_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI17_P2+(hv_Biases.TupleSelect(23)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }


    //get_perpendicular_line_that_passes (lineX1RightBase, lineY1RightBase, lineX2RightBase, lineY2RightBase, colIntersect, rowIntersect, lineXPerpendicular, lineYPerpendicular)
    //intersection_lines (rowIntersect, colIntersect, rowIntersect, lineXPerpendicular, lineY1RightBase, lineX1RightBase, lineY2RightBase, lineX2RightBase, rowIntersect, colIntersect, IsOverlapping3)
    //intersectXs := [intersectXs, colIntersect]
    //intersectYs := [intersectYs, rowIntersect]
    //outputsPixel := [outputsPixel, colIntersect]
    //outputsPixel := [outputsPixel, rowIntersect]


    //*******************



    //*******************************FAI19**************************
    hv_rectFAI19Row.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI19Row = 1278.78000000-hv_rowModel;
    }
    hv_rectFAI19Col.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI19Col = 4665.06000000-hv_colModel;
    }
    hv_rectFAI19Radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI19Radian = (new HTuple(180)).TupleRad()
        ;
    }
    hv_rectFAI19Len1.Dispose();
    hv_rectFAI19Len1 = 172.44100000;
    hv_rectFAI19Len2.Dispose();
    hv_rectFAI19Len2 = 573.70700000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI19Row, hv_rectFAI19Col, hv_rectFAI19Radian, hv_rectFAI19Len1, 
        hv_rectFAI19Len2, hv_MovementImageToImage, out ExpTmpOutVar_0, out ExpTmpOutVar_1, 
        out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI19Row.Dispose();
    hv_rectFAI19Row = ExpTmpOutVar_0;
    hv_rectFAI19Col.Dispose();
    hv_rectFAI19Col = ExpTmpOutVar_1;
    hv_rectFAI19Radian.Dispose();
    hv_rectFAI19Radian = ExpTmpOutVar_2;
    hv_rectFAI19Len1.Dispose();
    hv_rectFAI19Len1 = ExpTmpOutVar_3;
    hv_rectFAI19Len2.Dispose();
    hv_rectFAI19Len2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI19.Dispose();hv_lineY1FAI19.Dispose();hv_lineX2FAI19.Dispose();hv_lineY2FAI19.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "positive", 
        hv_rectFAI19Row, hv_rectFAI19Col, hv_rectFAI19Radian, hv_rectFAI19Len1, hv_rectFAI19Len2, 
        hv_numSubRects, hv_FAI19Threshold, "first", 0.3, "true", 1, hv_Width, hv_Height, 
        hv_newWidth, out hv_lineX1FAI19, out hv_lineY1FAI19, out hv_lineX2FAI19, 
        out hv_lineY2FAI19, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //translate top base
    hv_FAI19_P1_LineStartX.Dispose();hv_FAI19_P1_LineStartY.Dispose();hv_FAI19_P1_LineEndX.Dispose();hv_FAI19_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI19_LEN_P1, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI19_P1_LineStartX, out hv_FAI19_P1_LineStartY, out hv_FAI19_P1_LineEndX, 
        out hv_FAI19_P1_LineEndY);
    hv_FAI19_P2_LineStartX.Dispose();hv_FAI19_P2_LineStartY.Dispose();hv_FAI19_P2_LineEndX.Dispose();hv_FAI19_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI19_LEN_P2, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI19_P2_LineStartX, out hv_FAI19_P2_LineStartY, out hv_FAI19_P2_LineEndX, 
        out hv_FAI19_P2_LineEndY);

    //P1
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI19, hv_lineX1FAI19, hv_lineY2FAI19, 
        hv_lineX2FAI19, hv_FAI19_P1_LineStartY, hv_FAI19_P1_LineStartX, hv_FAI19_P1_LineEndY, 
        hv_FAI19_P1_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI19_P1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI19_P1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI19_P1+(hv_Biases.TupleSelect(24)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //P2
    hv_rowIntersect.Dispose();hv_colIntersect.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_lineY1FAI19, hv_lineX1FAI19, hv_lineY2FAI19, 
        hv_lineX2FAI19, hv_FAI19_P2_LineStartY, hv_FAI19_P2_LineStartX, hv_FAI19_P2_LineEndY, 
        hv_FAI19_P2_LineEndX, out hv_rowIntersect, out hv_colIntersect, out hv_IsOverlapping2);
    hv_distanceWorld_FAI19_P2.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1RightBase, hv_lineY1RightBase, hv_lineX2RightBase, 
        hv_lineY2RightBase, hv_colIntersect, hv_rowIntersect, hv_mapToWorld, out hv_distanceWorld_FAI19_P2, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colIntersect);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowIntersect);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI19_P2+(hv_Biases.TupleSelect(25)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }




    //****************************FAI20********************************
    //╤╗т╡пд
    hv_FAI20_P2_LineStartX.Dispose();hv_FAI20_P2_LineStartY.Dispose();hv_FAI20_P2_LineEndX.Dispose();hv_FAI20_P2_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI20_LEN_Y, hv_mapToWorld, hv_mapToImage, 
        "false", out hv_FAI20_P2_LineStartX, out hv_FAI20_P2_LineStartY, out hv_FAI20_P2_LineEndX, 
        out hv_FAI20_P2_LineEndY);
    hv_FAI20V_P1_LineStartX.Dispose();hv_FAI20V_P1_LineStartY.Dispose();hv_FAI20V_P1_LineEndX.Dispose();hv_FAI20V_P1_LineEndY.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1RightBase, hv_lineY1RightBase, 
        hv_lineX2RightBase, hv_lineY2RightBase, hv_FAI20_LEN_X, hv_mapToWorld, hv_mapToImage, 
        "true", out hv_FAI20V_P1_LineStartX, out hv_FAI20V_P1_LineStartY, out hv_FAI20V_P1_LineEndX, 
        out hv_FAI20V_P1_LineEndY);
    hv_rowCenterTop.Dispose();hv_colCenterTop.Dispose();hv_IsOverlapping2.Dispose();
    HOperatorSet.IntersectionLines(hv_FAI20_P2_LineStartY, hv_FAI20_P2_LineStartX, 
        hv_FAI20_P2_LineEndY, hv_FAI20_P2_LineEndX, hv_FAI20V_P1_LineStartY, hv_FAI20V_P1_LineStartX, 
        hv_FAI20V_P1_LineEndY, hv_FAI20V_P1_LineEndX, out hv_rowCenterTop, out hv_colCenterTop, 
        out hv_IsOverlapping2);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectXs = hv_intersectXs.TupleConcat(
        hv_colCenterTop);
    hv_intersectXs.Dispose();
    hv_intersectXs = ExpTmpLocalVar_intersectXs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_intersectYs = hv_intersectYs.TupleConcat(
        hv_rowCenterTop);
    hv_intersectYs.Dispose();
    hv_intersectYs = ExpTmpLocalVar_intersectYs;
    }
    }

    hv_rectFAI20TRRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20TRRow = 268.18300000-hv_rowModel;
    }
    hv_rectFAI20TRCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20TRCol = 4567.96000000-hv_colModel;
    }
    hv_rectFAI20TRRadian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20TRRadian = (new HTuple(-122.84800000)).TupleRad()
        ;
    }
    hv_rectFAI20TRLen1.Dispose();
    hv_rectFAI20TRLen1 = 84.64630000;
    hv_rectFAI20TRLen2.Dispose();
    hv_rectFAI20TRLen2 = 65.46210000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI20TRRow, hv_rectFAI20TRCol, hv_rectFAI20TRRadian, 
        hv_rectFAI20TRLen1, hv_rectFAI20TRLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
        out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI20TRRow.Dispose();
    hv_rectFAI20TRRow = ExpTmpOutVar_0;
    hv_rectFAI20TRCol.Dispose();
    hv_rectFAI20TRCol = ExpTmpOutVar_1;
    hv_rectFAI20TRRadian.Dispose();
    hv_rectFAI20TRRadian = ExpTmpOutVar_2;
    hv_rectFAI20TRLen1.Dispose();
    hv_rectFAI20TRLen1 = ExpTmpOutVar_3;
    hv_rectFAI20TRLen2.Dispose();
    hv_rectFAI20TRLen2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI20TR.Dispose();hv_lineY1FAI20TR.Dispose();hv_lineX2FAI20TR.Dispose();hv_lineY2FAI20TR.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "negative", 
        hv_rectFAI20TRRow, hv_rectFAI20TRCol, hv_rectFAI20TRRadian, hv_rectFAI20TRLen1, 
        hv_rectFAI20TRLen2, 10, hv_FAI20Threshold_up, "first", 0, "false", 3, hv_Width, 
        hv_Height, hv_newWidth, out hv_lineX1FAI20TR, out hv_lineY1FAI20TR, out hv_lineX2FAI20TR, 
        out hv_lineY2FAI20TR, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    hv_rectFAI20LFRow.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20LFRow = 2058.83000000-hv_rowModel;
    }
    hv_rectFAI20LFCol.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20LFCol = 2763.07000000-hv_colModel;
    }
    hv_rectFAI20LFRadian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rectFAI20LFRadian = (new HTuple(48.47500000)).TupleRad()
        ;
    }
    hv_rectFAI20LFLen1.Dispose();
    hv_rectFAI20LFLen1 = 80.07090000;
    hv_rectFAI20LFLen2.Dispose();
    hv_rectFAI20LFLen2 = 65.95030000;
    {
    HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;HTuple ExpTmpOutVar_2;HTuple ExpTmpOutVar_3;
    HTuple ExpTmpOutVar_4;
    AffineTransRect2(hv_rectFAI20LFRow, hv_rectFAI20LFCol, hv_rectFAI20LFRadian, 
        hv_rectFAI20LFLen1, hv_rectFAI20LFLen2, hv_MovementImageToImage, out ExpTmpOutVar_0, 
        out ExpTmpOutVar_1, out ExpTmpOutVar_2, out ExpTmpOutVar_3, out ExpTmpOutVar_4);
    hv_rectFAI20LFRow.Dispose();
    hv_rectFAI20LFRow = ExpTmpOutVar_0;
    hv_rectFAI20LFCol.Dispose();
    hv_rectFAI20LFCol = ExpTmpOutVar_1;
    hv_rectFAI20LFRadian.Dispose();
    hv_rectFAI20LFRadian = ExpTmpOutVar_2;
    hv_rectFAI20LFLen1.Dispose();
    hv_rectFAI20LFLen1 = ExpTmpOutVar_3;
    hv_rectFAI20LFLen2.Dispose();
    hv_rectFAI20LFLen2 = ExpTmpOutVar_4;
    }
    ho_rect.Dispose();ho_lineRegion.Dispose();hv_lineX1FAI20LF.Dispose();hv_lineY1FAI20LF.Dispose();hv_lineX2FAI20LF.Dispose();hv_lineY2FAI20LF.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_rect, out ho_lineRegion, "negative", 
        hv_rectFAI20LFRow, hv_rectFAI20LFCol, hv_rectFAI20LFRadian, hv_rectFAI20LFLen1, 
        hv_rectFAI20LFLen2, 10, hv_FAI20Threshold_down, "first", 0, "false", 1, hv_Width, 
        hv_Height, hv_newWidth, out hv_lineX1FAI20LF, out hv_lineY1FAI20LF, out hv_lineX2FAI20LF, 
        out hv_lineY2FAI20LF, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_FindLineRects, ho_rect, out ExpTmpOutVar_0);
    ho_FindLineRects.Dispose();
    ho_FindLineRects = ExpTmpOutVar_0;
    }
    {
    HObject ExpTmpOutVar_0;
    HOperatorSet.ConcatObj(ho_lineRegions, ho_lineRegion, out ExpTmpOutVar_0);
    ho_lineRegions.Dispose();
    ho_lineRegions = ExpTmpOutVar_0;
    }

    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXused = hv_crossesXused.TupleConcat(
        hv_XsUsed);
    hv_crossesXused.Dispose();
    hv_crossesXused = ExpTmpLocalVar_crossesXused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYused = hv_crossesYused.TupleConcat(
        hv_YsUsed);
    hv_crossesYused.Dispose();
    hv_crossesYused = ExpTmpLocalVar_crossesYused;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesXIgnored = hv_crossesXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_crossesXIgnored.Dispose();
    hv_crossesXIgnored = ExpTmpLocalVar_crossesXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_crossesYIgnored = hv_crossesYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_crossesYIgnored.Dispose();
    hv_crossesYIgnored = ExpTmpLocalVar_crossesYIgnored;
    }
    }

    //FAI20-1
    hv_distanceWorld_FAI20_1.Dispose();hv_distancePixel.Dispose();
    DistancePLInWorld(hv_lineX1FAI20TR, hv_lineY1FAI20TR, hv_lineX2FAI20TR, hv_lineY2FAI20TR, 
        hv_lineX1FAI20LF, hv_lineY1FAI20LF, hv_mapToWorld, out hv_distanceWorld_FAI20_1, 
        out hv_distancePixel);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI20_1+(hv_Biases.TupleSelect(26)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    //FAI20-2
    hv_distanceWorld_FAI20_2_1.Dispose();hv_distancePixel_FAI20_2_1.Dispose();
    DistancePLInWorld(hv_lineX1FAI20TR, hv_lineY1FAI20TR, hv_lineX2FAI20TR, hv_lineY2FAI20TR, 
        hv_colCenterTop, hv_rowCenterTop, hv_mapToWorld, out hv_distanceWorld_FAI20_2_1, 
        out hv_distancePixel_FAI20_2_1);
    hv_distanceWorld_FAI20_2_2.Dispose();hv_distancePixel_FAI20_2_2.Dispose();
    DistancePLInWorld(hv_lineX1FAI20LF, hv_lineY1FAI20LF, hv_lineX2FAI20LF, hv_lineY2FAI20LF, 
        hv_colCenterTop, hv_rowCenterTop, hv_mapToWorld, out hv_distanceWorld_FAI20_2_2, 
        out hv_distancePixel_FAI20_2_2);
    hv_distanceWorld_FAI20_2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_distanceWorld_FAI20_2 = hv_distanceWorld_FAI20_2_1-hv_distanceWorld_FAI20_2_2;
    }
    hv_distancePixel.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_distancePixel = hv_distancePixel_FAI20_2_1-hv_distancePixel_FAI20_2_2;
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputs = hv_outputs.TupleConcat(
        hv_distanceWorld_FAI20_2+(hv_Biases.TupleSelect(27)));
    hv_outputs.Dispose();
    hv_outputs = ExpTmpLocalVar_outputs;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_outputsPixel = hv_outputsPixel.TupleConcat(
        hv_distancePixel);
    hv_outputsPixel.Dispose();
    hv_outputsPixel = ExpTmpLocalVar_outputsPixel;
    }
    }

    hv_numOutputs.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_numOutputs = new HTuple(hv_outputs.TupleLength()
        );
    }
    hv_numOutputPixels.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_numOutputPixels = new HTuple(hv_outputsPixel.TupleLength()
        );
    }
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_Border.Dispose();
    ho_rectBaseRight.Dispose();
    ho_lineRegionRightBase.Dispose();
    ho_rectBaseTop.Dispose();
    ho_lineRegionTopBase.Dispose();
    ho_Rectangle1.Dispose();
    ho_Rectangle.Dispose();
    ho_findLineRegionFAI2.Dispose();
    ho_lineRegion.Dispose();
    ho_rectFAI3.Dispose();
    ho_rectFAI4.Dispose();
    ho_rect.Dispose();
    ho_lineRegion1.Dispose();
    ho_Cross.Dispose();

    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_mapToImage.Dispose();
    hv_mapToWorld.Dispose();
    hv_crossSize.Dispose();
    hv_numSubRects.Dispose();
    hv_ignorePortion.Dispose();
    hv_ModelThreshold.Dispose();
    hv_TopThreshold.Dispose();
    hv_RightThreshold.Dispose();
    hv_FAI2Threshold.Dispose();
    hv_FAI3Threshold.Dispose();
    hv_FAI4Threshold.Dispose();
    hv_FAI5Threshold.Dispose();
    hv_FAI6Threshold.Dispose();
    hv_FAI9Threshold.Dispose();
    hv_FAI12Threshold.Dispose();
    hv_FAI16Threshold.Dispose();
    hv_FAI17Threshold.Dispose();
    hv_FAI19Threshold.Dispose();
    hv_FAI20Threshold_up.Dispose();
    hv_FAI20Threshold_down.Dispose();
    hv_newWidth.Dispose();
    hv_FAI2_LEN_P1.Dispose();
    hv_FAI2_LEN_P2.Dispose();
    hv_FAI2_LEN_P3.Dispose();
    hv_FAI3_LEN_P1.Dispose();
    hv_FAI3_LEN_P2.Dispose();
    hv_FAI3_LEN_P3.Dispose();
    hv_FAI4_LEN_P1.Dispose();
    hv_FAI4_LEN_P2.Dispose();
    hv_FAI4_LEN_P3.Dispose();
    hv_FAI5_LEN_P1.Dispose();
    hv_FAI5_LEN_P2.Dispose();
    hv_FAI5_LEN_P3.Dispose();
    hv_FAI6_LEN_P1.Dispose();
    hv_FAI6_LEN_P2.Dispose();
    hv_FAI6_LEN_P3.Dispose();
    hv_FAI9_LEN_P1.Dispose();
    hv_FAI9_LEN_P2.Dispose();
    hv_FAI9_LEN_P3.Dispose();
    hv_FAI12_LEN_P1.Dispose();
    hv_FAI12_LEN_P2.Dispose();
    hv_FAI16_LEN_P1.Dispose();
    hv_FAI16_LEN_P2.Dispose();
    hv_FAI17_LEN_P1.Dispose();
    hv_FAI17_LEN_P2.Dispose();
    hv_FAI19_LEN_P1.Dispose();
    hv_FAI19_LEN_P2.Dispose();
    hv_FAI20_LEN_X.Dispose();
    hv_FAI20_LEN_Y.Dispose();
    hv_modelPath.Dispose();
    hv_Threshold.Dispose();
    hv_rowModel.Dispose();
    hv_colModel.Dispose();
    hv_Row.Dispose();
    hv_Column.Dispose();
    hv_Angle.Dispose();
    hv_Score.Dispose();
    hv_MovementImageToImage.Dispose();
    hv_baseRightRow.Dispose();
    hv_baseRightColum.Dispose();
    hv_baseRightRadian.Dispose();
    hv_baseRightLen1.Dispose();
    hv_baseRightLen2.Dispose();
    hv_lineX1RightBase.Dispose();
    hv_lineY1RightBase.Dispose();
    hv_lineX2RightBase.Dispose();
    hv_lineY2RightBase.Dispose();
    hv_XsUsed.Dispose();
    hv_YsUsed.Dispose();
    hv_XsIgnored.Dispose();
    hv_YsIgnored.Dispose();
    hv_baseTopRow.Dispose();
    hv_baseTopColumn.Dispose();
    hv_baseTopRadian.Dispose();
    hv_baseTopLen1.Dispose();
    hv_baseTopLen2.Dispose();
    hv_lineX1TopBase.Dispose();
    hv_lineY1TopBase.Dispose();
    hv_lineX2TopBase.Dispose();
    hv_lineY2TopBase.Dispose();
    hv_rowOrigin.Dispose();
    hv_colOrigin.Dispose();
    hv_IsOverlapping.Dispose();
    hv_ptXOnPerpenducularDir.Dispose();
    hv_ptYOnPerpenducularDir.Dispose();
    hv_FAI2_P1_LineStartX.Dispose();
    hv_FAI2_P1_LineStartY.Dispose();
    hv_FAI2_P1_LineEndX.Dispose();
    hv_FAI2_P1_LineEndY.Dispose();
    hv_FAI2_P2_LineStartX.Dispose();
    hv_FAI2_P2_LineStartY.Dispose();
    hv_FAI2_P2_LineEndX.Dispose();
    hv_FAI2_P2_LineEndY.Dispose();
    hv_FAI2_P3_LineStartX.Dispose();
    hv_FAI2_P3_LineStartY.Dispose();
    hv_FAI2_P3_LineEndX.Dispose();
    hv_FAI2_P3_LineEndY.Dispose();
    hv_rectFAI2Row.Dispose();
    hv_rectFAI2Col.Dispose();
    hv_rectFAI2Radian.Dispose();
    hv_rectFAI2Len1.Dispose();
    hv_rectFAI2Len2.Dispose();
    hv_lineStartX_FAI2H.Dispose();
    hv_lineStartY_FAI2H.Dispose();
    hv_lineEndX_FAI2H.Dispose();
    hv_lineEndY_FAI2H.Dispose();
    hv_rowIntersect.Dispose();
    hv_colIntersect.Dispose();
    hv_IsOverlapping1.Dispose();
    hv_distanceWorld_P1.Dispose();
    hv_distancePixel.Dispose();
    hv_distanceWorld_P2.Dispose();
    hv_distanceWorld_P3.Dispose();
    hv_rectFAI3Row.Dispose();
    hv_rectFAI3Col.Dispose();
    hv_rectFAI3Radian.Dispose();
    hv_rectFAI3Len1.Dispose();
    hv_rectFAI3Len2.Dispose();
    hv_lineX1FAI3.Dispose();
    hv_lineY1FAI3.Dispose();
    hv_lineX2FAI3.Dispose();
    hv_lineY2FAI3.Dispose();
    hv_FAI3_P1_LineStartX.Dispose();
    hv_FAI3_P1_LineStartY.Dispose();
    hv_FAI3_P1_LineEndX.Dispose();
    hv_FAI3_P1_LineEndY.Dispose();
    hv_FAI3_P2_LineStartX.Dispose();
    hv_FAI3_P2_LineStartY.Dispose();
    hv_FAI3_P2_LineEndX.Dispose();
    hv_FAI3_P2_LineEndY.Dispose();
    hv_FAI3_P3_LineStartX.Dispose();
    hv_FAI3_P3_LineStartY.Dispose();
    hv_FAI3_P3_LineEndX.Dispose();
    hv_FAI3_P3_LineEndY.Dispose();
    hv_IsOverlapping2.Dispose();
    hv_distanceWorld_FAI3_P1.Dispose();
    hv_distanceWorld_FAI3_P2.Dispose();
    hv_distanceWorld_FAI3_P3.Dispose();
    hv_rectFAI4Row.Dispose();
    hv_rectFAI4Col.Dispose();
    hv_rectFAI4Radian.Dispose();
    hv_rectFAI4Len1.Dispose();
    hv_rectFAI4Len2.Dispose();
    hv_lineX1FAI4.Dispose();
    hv_lineY1FAI4.Dispose();
    hv_lineX2FAI4.Dispose();
    hv_lineY2FAI4.Dispose();
    hv_distanceWorld_FAI4_P1.Dispose();
    hv_distanceWorld_FAI4_P2.Dispose();
    hv_distanceWorld_FAI4_P3.Dispose();
    hv_rectFAI5Row.Dispose();
    hv_rectFAI5Col.Dispose();
    hv_rectFAI5Radian.Dispose();
    hv_rectFAI5Len1.Dispose();
    hv_rectFAI5Len2.Dispose();
    hv_lineX1FAI5.Dispose();
    hv_lineY1FAI5.Dispose();
    hv_lineX2FAI5.Dispose();
    hv_lineY2FAI5.Dispose();
    hv_distanceWorld_FAI5_P1.Dispose();
    hv_distanceWorld_FAI5_P2.Dispose();
    hv_distanceWorld_FAI5_P3.Dispose();
    hv_rectFAI6Row.Dispose();
    hv_rectFAI6Col.Dispose();
    hv_rectFAI6Radian.Dispose();
    hv_rectFAI6Len1.Dispose();
    hv_rectFAI6Len2.Dispose();
    hv_lineX1FAI6.Dispose();
    hv_lineY1FAI6.Dispose();
    hv_lineX2FAI6.Dispose();
    hv_lineY2FAI6.Dispose();
    hv_FAI6_P1_LineStartX.Dispose();
    hv_FAI6_P1_LineStartY.Dispose();
    hv_FAI6_P1_LineEndX.Dispose();
    hv_FAI6_P1_LineEndY.Dispose();
    hv_FAI6_P2_LineStartX.Dispose();
    hv_FAI6_P2_LineStartY.Dispose();
    hv_FAI6_P2_LineEndX.Dispose();
    hv_FAI6_P2_LineEndY.Dispose();
    hv_FAI6_P3_LineStartX.Dispose();
    hv_FAI6_P3_LineStartY.Dispose();
    hv_FAI6_P3_LineEndX.Dispose();
    hv_FAI6_P3_LineEndY.Dispose();
    hv_distanceWorld_FAI6_P1.Dispose();
    hv_distanceWorld_FAI6_P2.Dispose();
    hv_distanceWorld_FAI6_P3.Dispose();
    hv_rectFAI9Row.Dispose();
    hv_rectFAI9Col.Dispose();
    hv_rectFAI9Radian.Dispose();
    hv_rectFAI9Len1.Dispose();
    hv_rectFAI9Len2.Dispose();
    hv_lineX1FAI9.Dispose();
    hv_lineY1FAI9.Dispose();
    hv_lineX2FAI9.Dispose();
    hv_lineY2FAI9.Dispose();
    hv_FAI9_P1_LineStartX.Dispose();
    hv_FAI9_P1_LineStartY.Dispose();
    hv_FAI9_P1_LineEndX.Dispose();
    hv_FAI9_P1_LineEndY.Dispose();
    hv_FAI9_P2_LineStartX.Dispose();
    hv_FAI9_P2_LineStartY.Dispose();
    hv_FAI9_P2_LineEndX.Dispose();
    hv_FAI9_P2_LineEndY.Dispose();
    hv_FAI9_P3_LineStartX.Dispose();
    hv_FAI9_P3_LineStartY.Dispose();
    hv_FAI9_P3_LineEndX.Dispose();
    hv_FAI9_P3_LineEndY.Dispose();
    hv_distanceWorld_FAI9_P1.Dispose();
    hv_distanceWorld_FAI9_P2.Dispose();
    hv_distanceWorld_FAI9_P3.Dispose();
    hv_rectFAI12Row.Dispose();
    hv_rectFAI12Col.Dispose();
    hv_rectFAI12Radian.Dispose();
    hv_rectFAI12Len1.Dispose();
    hv_rectFAI12Len2.Dispose();
    hv_lineX1FAI12.Dispose();
    hv_lineY1FAI12.Dispose();
    hv_lineX2FAI12.Dispose();
    hv_lineY2FAI12.Dispose();
    hv_FAI12_P1_LineStartX.Dispose();
    hv_FAI12_P1_LineStartY.Dispose();
    hv_FAI12_P1_LineEndX.Dispose();
    hv_FAI12_P1_LineEndY.Dispose();
    hv_FAI12_P2_LineStartX.Dispose();
    hv_FAI12_P2_LineStartY.Dispose();
    hv_FAI12_P2_LineEndX.Dispose();
    hv_FAI12_P2_LineEndY.Dispose();
    hv_distanceWorld_FAI12_P1.Dispose();
    hv_distanceWorld_FAI12_P2.Dispose();
    hv_rectFAI16Row.Dispose();
    hv_rectFAI16Col.Dispose();
    hv_rectFAI16Radian.Dispose();
    hv_rectFAI16Len1.Dispose();
    hv_rectFAI16Len2.Dispose();
    hv_lineX1FAI16.Dispose();
    hv_lineY1FAI16.Dispose();
    hv_lineX2FAI16.Dispose();
    hv_lineY2FAI16.Dispose();
    hv_FAI16_P1_LineStartX.Dispose();
    hv_FAI16_P1_LineStartY.Dispose();
    hv_FAI16_P1_LineEndX.Dispose();
    hv_FAI16_P1_LineEndY.Dispose();
    hv_FAI16_P2_LineStartX.Dispose();
    hv_FAI16_P2_LineStartY.Dispose();
    hv_FAI16_P2_LineEndX.Dispose();
    hv_FAI16_P2_LineEndY.Dispose();
    hv_distanceWorld_FAI16_P1.Dispose();
    hv_distanceWorld_FAI16_P2.Dispose();
    hv_rectFAI17Row.Dispose();
    hv_rectFAI17Col.Dispose();
    hv_rectFAI17Radian.Dispose();
    hv_rectFAI17Len1.Dispose();
    hv_rectFAI17Len2.Dispose();
    hv_lineX1FAI17.Dispose();
    hv_lineY1FAI17.Dispose();
    hv_lineX2FAI17.Dispose();
    hv_lineY2FAI17.Dispose();
    hv_FAI17_P1_LineStartX.Dispose();
    hv_FAI17_P1_LineStartY.Dispose();
    hv_FAI17_P1_LineEndX.Dispose();
    hv_FAI17_P1_LineEndY.Dispose();
    hv_FAI17_P2_LineStartX.Dispose();
    hv_FAI17_P2_LineStartY.Dispose();
    hv_FAI17_P2_LineEndX.Dispose();
    hv_FAI17_P2_LineEndY.Dispose();
    hv_distanceWorld_FAI17_P1.Dispose();
    hv_distanceWorld_FAI17_P2.Dispose();
    hv_rectFAI19Row.Dispose();
    hv_rectFAI19Col.Dispose();
    hv_rectFAI19Radian.Dispose();
    hv_rectFAI19Len1.Dispose();
    hv_rectFAI19Len2.Dispose();
    hv_lineX1FAI19.Dispose();
    hv_lineY1FAI19.Dispose();
    hv_lineX2FAI19.Dispose();
    hv_lineY2FAI19.Dispose();
    hv_FAI19_P1_LineStartX.Dispose();
    hv_FAI19_P1_LineStartY.Dispose();
    hv_FAI19_P1_LineEndX.Dispose();
    hv_FAI19_P1_LineEndY.Dispose();
    hv_FAI19_P2_LineStartX.Dispose();
    hv_FAI19_P2_LineStartY.Dispose();
    hv_FAI19_P2_LineEndX.Dispose();
    hv_FAI19_P2_LineEndY.Dispose();
    hv_distanceWorld_FAI19_P1.Dispose();
    hv_distanceWorld_FAI19_P2.Dispose();
    hv_FAI20_P2_LineStartX.Dispose();
    hv_FAI20_P2_LineStartY.Dispose();
    hv_FAI20_P2_LineEndX.Dispose();
    hv_FAI20_P2_LineEndY.Dispose();
    hv_FAI20V_P1_LineStartX.Dispose();
    hv_FAI20V_P1_LineStartY.Dispose();
    hv_FAI20V_P1_LineEndX.Dispose();
    hv_FAI20V_P1_LineEndY.Dispose();
    hv_rowCenterTop.Dispose();
    hv_colCenterTop.Dispose();
    hv_rectFAI20TRRow.Dispose();
    hv_rectFAI20TRCol.Dispose();
    hv_rectFAI20TRRadian.Dispose();
    hv_rectFAI20TRLen1.Dispose();
    hv_rectFAI20TRLen2.Dispose();
    hv_lineX1FAI20TR.Dispose();
    hv_lineY1FAI20TR.Dispose();
    hv_lineX2FAI20TR.Dispose();
    hv_lineY2FAI20TR.Dispose();
    hv_rectFAI20LFRow.Dispose();
    hv_rectFAI20LFCol.Dispose();
    hv_rectFAI20LFRadian.Dispose();
    hv_rectFAI20LFLen1.Dispose();
    hv_rectFAI20LFLen2.Dispose();
    hv_lineX1FAI20LF.Dispose();
    hv_lineY1FAI20LF.Dispose();
    hv_lineX2FAI20LF.Dispose();
    hv_lineY2FAI20LF.Dispose();
    hv_distanceWorld_FAI20_1.Dispose();
    hv_distanceWorld_FAI20_2_1.Dispose();
    hv_distancePixel_FAI20_2_1.Dispose();
    hv_distanceWorld_FAI20_2_2.Dispose();
    hv_distancePixel_FAI20_2_2.Dispose();
    hv_distanceWorld_FAI20_2.Dispose();
    hv_numOutputs.Dispose();
    hv_numOutputPixels.Dispose();

    return;
  }

  public void MakeParallelLine (HTuple hv_lineStartX, HTuple hv_lineStartY, HTuple hv_lineEndX, 
      HTuple hv_lineEndY, HTuple hv_offset, HTuple hv_isVertical, out HTuple hv_outLineStartX, 
      out HTuple hv_outLineStartY, out HTuple hv_outLineEndX, out HTuple hv_outLineEndY)
  {


    // Initialize local and output iconic variables 
    hv_outLineStartX = new HTuple();
    hv_outLineStartY = new HTuple();
    hv_outLineEndX = new HTuple();
    hv_outLineEndY = new HTuple();
    if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
    {
      hv_outLineStartX.Dispose();hv_outLineStartY.Dispose();hv_outLineEndX.Dispose();hv_outLineEndY.Dispose();
      OffsetLineLeftRight(hv_lineStartX, hv_lineStartY, hv_lineEndX, hv_lineEndY, 
          hv_offset, out hv_outLineStartX, out hv_outLineStartY, out hv_outLineEndX, 
          out hv_outLineEndY);
    }
    else
    {
      hv_outLineStartX.Dispose();hv_outLineStartY.Dispose();hv_outLineEndX.Dispose();hv_outLineEndY.Dispose();
      OffsetLineUpDown(hv_lineStartX, hv_lineStartY, hv_lineEndX, hv_lineEndY, hv_offset, 
          out hv_outLineStartX, out hv_outLineStartY, out hv_outLineEndX, out hv_outLineEndY);
    }



    return;
  }

  public void move_point_along_line (HTuple hv_lineStartX, HTuple hv_lineStartY, 
      HTuple hv_lineDirectionX, HTuple hv_lineDirectionY, HTuple hv_distance, out HTuple hv_lineMovedX, 
      out HTuple hv_lineMovedY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_totalDiff = new HTuple(), hv_xDirection = new HTuple();
    HTuple hv_yDirection = new HTuple();
    // Initialize local and output iconic variables 
    hv_lineMovedX = new HTuple();
    hv_lineMovedY = new HTuple();
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_lineDirectionX-hv_lineStartX;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_lineDirectionY-hv_lineStartY;
    }
    hv_totalDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_totalDiff = (((hv_yDiff*hv_yDiff)+(hv_xDiff*hv_xDiff))).TupleSqrt()
        ;
    }
    hv_xDirection.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDirection = hv_xDiff/hv_totalDiff;
    }
    hv_yDirection.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDirection = hv_yDiff/hv_totalDiff;
    }
    hv_lineMovedX.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineMovedX = hv_lineStartX+(hv_xDirection*hv_distance);
    }
    hv_lineMovedY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_lineMovedY = hv_lineStartY+(hv_yDirection*hv_distance);
    }

    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_totalDiff.Dispose();
    hv_xDirection.Dispose();
    hv_yDirection.Dispose();

    return;
  }

  public void offset_line (HTuple hv_x1, HTuple hv_y1, HTuple hv_x2, HTuple hv_y2, 
      HTuple hv_offset, out HTuple hv_x1Output, out HTuple hv_y1Output, out HTuple hv_x2Output, 
      out HTuple hv_y2Output)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_m = new HTuple(), hv_b = new HTuple(), hv_radian = new HTuple();
    HTuple hv_yIncre = new HTuple(), hv_newB = new HTuple();
    // Initialize local and output iconic variables 
    hv_x1Output = new HTuple();
    hv_y1Output = new HTuple();
    hv_x2Output = new HTuple();
    hv_y2Output = new HTuple();
    //calculate m and b
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_x2-hv_x1;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_y2-hv_y1;
    }
    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_yDiff/hv_xDiff;
    }
    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_y1-(hv_m*hv_x1);
    }

    //calculate angle
    hv_radian.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_radian = hv_m.TupleAtan()
        ;
    }
    //calculate new b after offset
    hv_yIncre.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yIncre = hv_offset/(hv_radian.TupleCos()
        );
    }
    hv_newB.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_newB = hv_b+hv_yIncre;
    }

    //sample two points back to caller
    hv_x1Output.Dispose();
    hv_x1Output = new HTuple(hv_x1);
    hv_x2Output.Dispose();
    hv_x2Output = new HTuple(hv_x2);
    hv_y1Output.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_y1Output = (hv_x1Output*hv_m)+hv_newB;
    }
    hv_y2Output.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_y2Output = (hv_x2Output*hv_m)+hv_newB;
    }


    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();
    hv_radian.Dispose();
    hv_yIncre.Dispose();
    hv_newB.Dispose();

    return;
  }

  public void OffsetLineLeftRight (HTuple hv_x1, HTuple hv_y1, HTuple hv_x2, HTuple hv_y2, 
      HTuple hv_offset, out HTuple hv_outX1, out HTuple hv_outY1, out HTuple hv_outX2, 
      out HTuple hv_outY2)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_m = new HTuple(), hv_b = new HTuple(), hv_alpha = new HTuple();
    HTuple hv_bIncre = new HTuple(), hv_newB = new HTuple();
    // Initialize local and output iconic variables 
    hv_outX1 = new HTuple();
    hv_outY1 = new HTuple();
    hv_outX2 = new HTuple();
    hv_outY2 = new HTuple();
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_x2-hv_x1;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_y2-hv_y1;
    }

    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_xDiff/hv_yDiff;
    }

    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_x1-(hv_m*hv_y1);
    }

    hv_alpha.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_alpha = hv_m.TupleAtan()
        ;
    }

    hv_bIncre.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_bIncre = hv_offset/(hv_alpha.TupleCos()
        );
    }

    hv_newB.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_newB = hv_b+hv_bIncre;
    }

    //outX = m * outY + newB
    hv_outY1.Dispose();
    hv_outY1 = new HTuple(hv_y1);
    hv_outY2.Dispose();
    hv_outY2 = new HTuple(hv_y2);
    hv_outX1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outX1 = (hv_m*hv_outY1)+hv_newB;
    }
    hv_outX2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outX2 = (hv_m*hv_outY2)+hv_newB;
    }


    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();
    hv_alpha.Dispose();
    hv_bIncre.Dispose();
    hv_newB.Dispose();

    return;
  }

  public void OffsetLineUpDown (HTuple hv_x1, HTuple hv_y1, HTuple hv_x2, HTuple hv_y2, 
      HTuple hv_offset, out HTuple hv_outX1, out HTuple hv_outY1, out HTuple hv_outX2, 
      out HTuple hv_outY2)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_xDiff = new HTuple(), hv_yDiff = new HTuple();
    HTuple hv_m = new HTuple(), hv_b = new HTuple(), hv_alpha = new HTuple();
    HTuple hv_bIncre = new HTuple(), hv_newB = new HTuple();
    // Initialize local and output iconic variables 
    hv_outX1 = new HTuple();
    hv_outY1 = new HTuple();
    hv_outX2 = new HTuple();
    hv_outY2 = new HTuple();
    hv_xDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_xDiff = hv_x2-hv_x1;
    }
    hv_yDiff.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_yDiff = hv_y2-hv_y1;
    }

    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_yDiff/hv_xDiff;
    }
    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_y2-(hv_x2*hv_m);
    }

    hv_alpha.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_alpha = hv_m.TupleAtan()
        ;
    }

    hv_bIncre.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_bIncre = hv_offset/(hv_alpha.TupleCos()
        );
    }
    hv_newB.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_newB = hv_b+hv_bIncre;
    }

    //sample output points
    hv_outX1.Dispose();
    hv_outX1 = new HTuple(hv_x1);
    hv_outY1.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outY1 = (hv_m*hv_outX1)+hv_newB;
    }
    hv_outX2.Dispose();
    hv_outX2 = new HTuple(hv_x2);
    hv_outY2.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outY2 = (hv_m*hv_outX2)+hv_newB;
    }


    hv_xDiff.Dispose();
    hv_yDiff.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();
    hv_alpha.Dispose();
    hv_bIncre.Dispose();
    hv_newB.Dispose();

    return;
  }

  public void TranslateLineInWorldCoordinateAndConvertBack (HTuple hv_lineStartX, 
      HTuple hv_lineStartY, HTuple hv_lineEndX, HTuple hv_lineEndY, HTuple hv_distance, 
      HTuple hv_mapToWorld, HTuple hv_mapToImage, HTuple hv_isVertical, out HTuple hv_outLineStartX, 
      out HTuple hv_outLineStartY, out HTuple hv_outLineEndX, out HTuple hv_outLineEndY)
  {


    // Initialize local and output iconic variables 
    hv_outLineStartX = new HTuple();
    hv_outLineStartY = new HTuple();
    hv_outLineEndX = new HTuple();
    hv_outLineEndY = new HTuple();


    //translate world line
    hv_outLineStartX.Dispose();hv_outLineStartY.Dispose();hv_outLineEndX.Dispose();hv_outLineEndY.Dispose();
    MakeParallelLine(hv_lineStartX, hv_lineStartY, hv_lineEndX, hv_lineEndY, hv_distance, 
        hv_isVertical, out hv_outLineStartX, out hv_outLineStartY, out hv_outLineEndX, 
        out hv_outLineEndY);



    return;
  }

  public void TranslateLineNotVertical (HTuple hv_lineStartX, HTuple hv_lineStartY, 
      HTuple hv_lineEndX, HTuple hv_lineEndY, HTuple hv_offset, out HTuple hv_outLineStartX, 
      out HTuple hv_outLineStartY, out HTuple hv_outLineEndX, out HTuple hv_outLineEndY)
  {



    // Local iconic variables 

    // Local control variables 

    HTuple hv_Phi = new HTuple(), hv_absPhi = new HTuple();
    HTuple hv_bIncre = new HTuple(), hv_m = new HTuple(), hv_b = new HTuple();
    HTuple hv_newB = new HTuple();
    // Initialize local and output iconic variables 
    hv_outLineStartX = new HTuple();
    hv_outLineStartY = new HTuple();
    hv_outLineEndX = new HTuple();
    hv_outLineEndY = new HTuple();
    hv_Phi.Dispose();
    HOperatorSet.LineOrientation(hv_lineStartY, hv_lineStartX, hv_lineEndY, hv_lineEndX, 
        out hv_Phi);


    hv_absPhi.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_absPhi = hv_Phi.TupleAbs()
        ;
    }
    hv_bIncre.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_bIncre = hv_offset/(hv_absPhi.TupleCos()
        );
    }
    hv_m.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_m = hv_Phi.TupleAtan()
        ;
    }

    hv_b.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_b = hv_lineStartY-(hv_m*hv_lineStartX);
    }
    hv_newB.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_newB = hv_b+hv_bIncre;
    }

    //sample output points
    hv_outLineStartX.Dispose();
    hv_outLineStartX = new HTuple(hv_lineStartX);
    hv_outLineStartY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outLineStartY = (hv_m*hv_outLineStartX)+hv_newB;
    }
    hv_outLineEndX.Dispose();
    hv_outLineEndX = new HTuple(hv_lineEndX);
    hv_outLineEndY.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_outLineEndY = (hv_m*hv_outLineEndX)+hv_newB;
    }


    hv_Phi.Dispose();
    hv_absPhi.Dispose();
    hv_bIncre.Dispose();
    hv_m.Dispose();
    hv_b.Dispose();
    hv_newB.Dispose();

    return;
  }

  public void VisionProStyleFindLine (HObject ho_Image, out HObject ho_ROI_0, HTuple hv_transition, 
      HTuple hv_rect1_row, HTuple hv_rect1_col, HTuple hv_rect1_rad, HTuple hv_rect1_len1, 
      HTuple hv_rect1_len2, HTuple hv_numSubRects, HTuple hv_threshold, HTuple hv_sigma, 
      HTuple hv_firstOrLast, HTuple hv_usingPairs, HTuple hv_whichEdgePair, HTuple hv_minEdge, 
      HTuple hv_maxEdge, out HTuple hv_Xs, out HTuple hv_Ys)
  {




    // Local iconic variables 

    HObject ho_Rectangle=null;

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_leftFaced = new HTuple(), hv_rect1_deg = new HTuple();
    HTuple hv_widthSubRects = new HTuple(), hv_heightSubRects = new HTuple();
    HTuple hv_betaDeg = new HTuple(), hv_rectStartX = new HTuple();
    HTuple hv_rectStartY = new HTuple(), hv_subRectXIncrement = new HTuple();
    HTuple hv_subRectYIncrement = new HTuple(), hv_firstSubRectCenterX = new HTuple();
    HTuple hv_firstSubRectCenterY = new HTuple(), hv_Index = new HTuple();
    HTuple hv_subRectCenterX = new HTuple(), hv_subRectCenterY = new HTuple();
    HTuple hv_subRectLen1 = new HTuple(), hv_subRectLen2 = new HTuple();
    HTuple hv_subRectPhi = new HTuple(), hv_MeasureHandle1 = new HTuple();
    HTuple hv_RowEdge1 = new HTuple(), hv_ColumnEdge1 = new HTuple();
    HTuple hv_Amplitude1 = new HTuple(), hv_Distance1 = new HTuple();
    HTuple hv_RowEdgeFirst = new HTuple(), hv_ColumnEdgeFirst = new HTuple();
    HTuple hv_AmplitudeFirst = new HTuple(), hv_RowEdgeSecond = new HTuple();
    HTuple hv_ColumnEdgeSecond = new HTuple(), hv_AmplitudeSecond = new HTuple();
    HTuple hv_IntraDistance = new HTuple(), hv_InterDistance = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_Rectangle);
    hv_Xs = new HTuple();
    hv_Ys = new HTuple();

    hv_Xs.Dispose();
    hv_Xs = new HTuple();
    hv_Ys.Dispose();
    hv_Ys = new HTuple();


    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);


    hv_leftFaced.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_leftFaced = (new HTuple(hv_rect1_rad.TupleLess(
        (new HTuple(-90)).TupleRad()))).TupleOr(new HTuple(hv_rect1_rad.TupleGreater(
        (new HTuple(90)).TupleRad())));
    }
    hv_rect1_deg.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_rect1_deg = hv_rect1_rad.TupleDeg()
        ;
    }

    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle2(out ho_ROI_0, hv_rect1_row, hv_rect1_col, hv_rect1_rad, 
        hv_rect1_len1, hv_rect1_len2);
    hv_widthSubRects.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_widthSubRects = (hv_rect1_len2/hv_numSubRects)*2;
    }
    hv_heightSubRects.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_heightSubRects = hv_rect1_len1*2;
    }

    if ((int)(hv_leftFaced) != 0)
    {
      hv_betaDeg.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_betaDeg = (-hv_rect1_deg)-90;
      }
      hv_rectStartX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectStartX = hv_rect1_col-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
          )).TupleCos()));
      }
      hv_rectStartY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectStartY = hv_rect1_row-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
          )).TupleSin()));
      }
      hv_subRectXIncrement.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_subRectXIncrement = hv_widthSubRects*(((hv_betaDeg.TupleRad()
          )).TupleCos());
      }
      hv_subRectYIncrement.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_subRectYIncrement = (((hv_widthSubRects*hv_widthSubRects)-(hv_subRectXIncrement*hv_subRectXIncrement))).TupleSqrt()
          ;
      }
      hv_firstSubRectCenterX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_firstSubRectCenterX = hv_rectStartX+(hv_subRectXIncrement*0.5);
      }
      hv_firstSubRectCenterY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_firstSubRectCenterY = hv_rectStartY+(hv_subRectYIncrement*0.5);
      }
    }
    else
    {
      hv_betaDeg.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_betaDeg = 90+hv_rect1_deg;
      }
      hv_rectStartX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectStartX = hv_rect1_col+(hv_rect1_len2*(((hv_betaDeg.TupleRad()
          )).TupleCos()));
      }
      hv_rectStartY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_rectStartY = hv_rect1_row-(hv_rect1_len2*(((hv_betaDeg.TupleRad()
          )).TupleSin()));
      }
      hv_subRectXIncrement.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_subRectXIncrement = (-hv_widthSubRects)*(((hv_betaDeg.TupleRad()
          )).TupleCos());
      }
      hv_subRectYIncrement.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_subRectYIncrement = (((hv_widthSubRects*hv_widthSubRects)-(hv_subRectXIncrement*hv_subRectXIncrement))).TupleSqrt()
          ;
      }
      hv_firstSubRectCenterX.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_firstSubRectCenterX = hv_rectStartX+(hv_subRectXIncrement*0.5);
      }
      hv_firstSubRectCenterY.Dispose();
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      hv_firstSubRectCenterY = hv_rectStartY+(hv_subRectYIncrement*0.5);
      }
    }


    HTuple end_val34 = hv_numSubRects-1;
    HTuple step_val34 = 1;
    for (hv_Index=0; hv_Index.Continue(end_val34, step_val34); hv_Index = hv_Index.TupleAdd(step_val34))
    {

      if ((int)(hv_leftFaced) != 0)
      {
        hv_subRectCenterX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectCenterX = hv_firstSubRectCenterX+(hv_Index*hv_subRectXIncrement);
        }
        hv_subRectCenterY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectCenterY = hv_firstSubRectCenterY+(hv_Index*hv_subRectYIncrement);
        }
        hv_subRectLen1.Dispose();
        hv_subRectLen1 = new HTuple(hv_rect1_len1);
        hv_subRectLen2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectLen2 = hv_rect1_len2/hv_numSubRects;
        }
        hv_subRectPhi.Dispose();
        hv_subRectPhi = new HTuple(hv_rect1_rad);
      }
      else
      {
        hv_subRectCenterX.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectCenterX = hv_firstSubRectCenterX+(hv_Index*hv_subRectXIncrement);
        }
        hv_subRectCenterY.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectCenterY = hv_firstSubRectCenterY+(hv_Index*hv_subRectYIncrement);
        }
        hv_subRectLen1.Dispose();
        hv_subRectLen1 = new HTuple(hv_rect1_len1);
        hv_subRectLen2.Dispose();
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        hv_subRectLen2 = hv_rect1_len2/hv_numSubRects;
        }
        hv_subRectPhi.Dispose();
        hv_subRectPhi = new HTuple(hv_rect1_rad);
      }

      ho_Rectangle.Dispose();
      HOperatorSet.GenRectangle2(out ho_Rectangle, hv_subRectCenterY, hv_subRectCenterX, 
          hv_subRectPhi, hv_subRectLen1, hv_subRectLen2);
      hv_MeasureHandle1.Dispose();
      HOperatorSet.GenMeasureRectangle2(hv_subRectCenterY, hv_subRectCenterX, hv_subRectPhi, 
          hv_subRectLen1, hv_subRectLen2, hv_Width, hv_Height, "nearest_neighbor", 
          out hv_MeasureHandle1);

      if ((int)(new HTuple(hv_usingPairs.TupleEqual("false"))) != 0)
      {
        hv_RowEdge1.Dispose();hv_ColumnEdge1.Dispose();hv_Amplitude1.Dispose();hv_Distance1.Dispose();
        HOperatorSet.MeasurePos(ho_Image, hv_MeasureHandle1, hv_sigma, hv_threshold, 
            hv_transition, hv_firstOrLast, out hv_RowEdge1, out hv_ColumnEdge1, out hv_Amplitude1, 
            out hv_Distance1);
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
            hv_ColumnEdge1);
        hv_Xs.Dispose();
        hv_Xs = ExpTmpLocalVar_Xs;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
            hv_RowEdge1);
        hv_Ys.Dispose();
        hv_Ys = ExpTmpLocalVar_Ys;
        }
        }
      }
      else
      {
        hv_RowEdgeFirst.Dispose();hv_ColumnEdgeFirst.Dispose();hv_AmplitudeFirst.Dispose();hv_RowEdgeSecond.Dispose();hv_ColumnEdgeSecond.Dispose();hv_AmplitudeSecond.Dispose();hv_IntraDistance.Dispose();hv_InterDistance.Dispose();
        HOperatorSet.MeasurePairs(ho_Image, hv_MeasureHandle1, hv_sigma, hv_threshold, 
            hv_transition, hv_whichEdgePair, out hv_RowEdgeFirst, out hv_ColumnEdgeFirst, 
            out hv_AmplitudeFirst, out hv_RowEdgeSecond, out hv_ColumnEdgeSecond, 
            out hv_AmplitudeSecond, out hv_IntraDistance, out hv_InterDistance);
        //only count if edge with is within range
        if ((int)((new HTuple((new HTuple((new HTuple(hv_IntraDistance.TupleLength()
            )).TupleGreater(0))).TupleAnd(new HTuple(hv_IntraDistance.TupleGreater(
            hv_minEdge))))).TupleAnd(new HTuple(hv_IntraDistance.TupleLess(hv_maxEdge)))) != 0)
        {
          if ((int)(new HTuple(hv_firstOrLast.TupleEqual("first"))) != 0)
          {
            using (HDevDisposeHelper dh = new HDevDisposeHelper())
            {
            {
            HTuple 
              ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
                hv_ColumnEdgeFirst);
            hv_Xs.Dispose();
            hv_Xs = ExpTmpLocalVar_Xs;
            }
            }
            using (HDevDisposeHelper dh = new HDevDisposeHelper())
            {
            {
            HTuple 
              ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
                hv_RowEdgeFirst);
            hv_Ys.Dispose();
            hv_Ys = ExpTmpLocalVar_Ys;
            }
            }
          }
          else
          {
            using (HDevDisposeHelper dh = new HDevDisposeHelper())
            {
            {
            HTuple 
              ExpTmpLocalVar_Xs = hv_Xs.TupleConcat(
                hv_ColumnEdgeSecond);
            hv_Xs.Dispose();
            hv_Xs = ExpTmpLocalVar_Xs;
            }
            }
            using (HDevDisposeHelper dh = new HDevDisposeHelper())
            {
            {
            HTuple 
              ExpTmpLocalVar_Ys = hv_Ys.TupleConcat(
                hv_RowEdgeSecond);
            hv_Ys.Dispose();
            hv_Ys = ExpTmpLocalVar_Ys;
            }
            }
          }
        }

      }
      HOperatorSet.CloseMeasure(hv_MeasureHandle1);



    }


    ho_Rectangle.Dispose();

    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_leftFaced.Dispose();
    hv_rect1_deg.Dispose();
    hv_widthSubRects.Dispose();
    hv_heightSubRects.Dispose();
    hv_betaDeg.Dispose();
    hv_rectStartX.Dispose();
    hv_rectStartY.Dispose();
    hv_subRectXIncrement.Dispose();
    hv_subRectYIncrement.Dispose();
    hv_firstSubRectCenterX.Dispose();
    hv_firstSubRectCenterY.Dispose();
    hv_Index.Dispose();
    hv_subRectCenterX.Dispose();
    hv_subRectCenterY.Dispose();
    hv_subRectLen1.Dispose();
    hv_subRectLen2.Dispose();
    hv_subRectPhi.Dispose();
    hv_MeasureHandle1.Dispose();
    hv_RowEdge1.Dispose();
    hv_ColumnEdge1.Dispose();
    hv_Amplitude1.Dispose();
    hv_Distance1.Dispose();
    hv_RowEdgeFirst.Dispose();
    hv_ColumnEdgeFirst.Dispose();
    hv_AmplitudeFirst.Dispose();
    hv_RowEdgeSecond.Dispose();
    hv_ColumnEdgeSecond.Dispose();
    hv_AmplitudeSecond.Dispose();
    hv_IntraDistance.Dispose();
    hv_InterDistance.Dispose();

    return;
  }

  public void VisionProStyleFindLineOneStep (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_transition, HTuple hv_row, HTuple hv_col, 
      HTuple hv_radian, HTuple hv_len1, HTuple hv_len2, HTuple hv_numSubRects, HTuple hv_threshold, 
      HTuple hv_firstOrLast, HTuple hv_ignoreFraction, HTuple hv_isVertical, HTuple hv_sigma, 
      HTuple hv_imageWidth, HTuple hv_imageHeight, HTuple hv_newWidth, out HTuple hv_lineX1, 
      out HTuple hv_lineY1, out HTuple hv_lineX2, out HTuple hv_lineY2, out HTuple hv_XsUsed, 
      out HTuple hv_YsUsed, out HTuple hv_XsIgnored, out HTuple hv_YsIgnored)
  {




    // Stack for temporary objects 
    HObject[] OTemp = new HObject[20];

    // Local iconic variables 

    HObject ho_EmptyObject;

    // Local control variables 

    HTuple hv_MultipleLines = new HTuple(), hv_EdgesX = new HTuple();
    HTuple hv_EdgesY = new HTuple(), hv_i = new HTuple(), hv_Xs = new HTuple();
    HTuple hv_Ys = new HTuple(), hv_RowBegin = new HTuple();
    HTuple hv_ColBegin = new HTuple(), hv_RowEnd = new HTuple();
    HTuple hv_ColEnd = new HTuple(), hv_EdgesXStep = new HTuple();
    HTuple hv_EdgesYStep = new HTuple(), hv__ = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    HOperatorSet.GenEmptyObj(out ho_EmptyObject);
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();

    hv_MultipleLines.Dispose();
    hv_MultipleLines = "false";
    if ((int)(new HTuple((new HTuple(hv_row.TupleLength())).TupleGreater(1))) != 0)
    {
      hv_MultipleLines.Dispose();
      hv_MultipleLines = "true";
    }

    hv_EdgesX.Dispose();
    hv_EdgesX = new HTuple();
    hv_EdgesY.Dispose();
    hv_EdgesY = new HTuple();
    ho_EmptyObject.Dispose();
    HOperatorSet.GenEmptyObj(out ho_EmptyObject);

    for (hv_i=0; (int)hv_i<=(int)((new HTuple(hv_row.TupleLength()))-1); hv_i = (int)hv_i + 1)
    {
      using (HDevDisposeHelper dh = new HDevDisposeHelper())
      {
      ho_findLineRegion.Dispose();hv_Xs.Dispose();hv_Ys.Dispose();
      VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, 
          hv_row.TupleSelect(hv_i), hv_col.TupleSelect(hv_i), hv_radian.TupleSelect(
          hv_i), hv_len1.TupleSelect(hv_i), hv_len2.TupleSelect(hv_i), hv_numSubRects, 
          hv_threshold, hv_sigma, hv_firstOrLast, "false", "first", 0, 100, out hv_Xs, 
          out hv_Ys);
      }

      if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
      {
        hv_lineY1.Dispose();hv_lineX1.Dispose();hv_lineY2.Dispose();hv_lineX2.Dispose();hv_YsUsed.Dispose();hv_XsUsed.Dispose();hv_YsIgnored.Dispose();hv_XsIgnored.Dispose();
        FitLine2D(hv_Ys, hv_Xs, hv_ignoreFraction, out hv_lineY1, out hv_lineX1, 
            out hv_lineY2, out hv_lineX2, out hv_YsUsed, out hv_XsUsed, out hv_YsIgnored, 
            out hv_XsIgnored);
      }
      else
      {
        hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
        FitLine2D(hv_Xs, hv_Ys, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
            out hv_lineX2, out hv_lineY2, out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, 
            out hv_YsIgnored);
      }

      ho_findLineRegion.Dispose();hv_RowBegin.Dispose();hv_ColBegin.Dispose();hv_RowEnd.Dispose();hv_ColEnd.Dispose();hv_EdgesXStep.Dispose();hv_EdgesYStep.Dispose();
      _pinPointFindLine(ho_inputImage, out ho_findLineRegion, hv_lineX1, hv_lineX2, 
          hv_lineY1, hv_lineY2, hv_radian, hv_newWidth, hv_MultipleLines, out hv_RowBegin, 
          out hv_ColBegin, out hv_RowEnd, out hv_ColEnd, out hv_EdgesXStep, out hv_EdgesYStep);

      if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
      {
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesX = hv_EdgesX.TupleConcat(
            hv_EdgesXStep);
        hv_EdgesX.Dispose();
        hv_EdgesX = ExpTmpLocalVar_EdgesX;
        }
        }
        using (HDevDisposeHelper dh = new HDevDisposeHelper())
        {
        {
        HTuple 
          ExpTmpLocalVar_EdgesY = hv_EdgesY.TupleConcat(
            hv_EdgesYStep);
        hv_EdgesY.Dispose();
        hv_EdgesY = ExpTmpLocalVar_EdgesY;
        }
        }
        {
        HObject ExpTmpOutVar_0;
        HOperatorSet.ConcatObj(ho_EmptyObject, ho_findLineRegion, out ExpTmpOutVar_0
            );
        ho_EmptyObject.Dispose();
        ho_EmptyObject = ExpTmpOutVar_0;
        }
      }

    }

    if ((int)(new HTuple(hv_MultipleLines.TupleEqual("true"))) != 0)
    {
      hv_ColBegin.Dispose();hv_RowBegin.Dispose();hv_ColEnd.Dispose();hv_RowEnd.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();hv__.Dispose();
      FitLine2D(hv_EdgesX, hv_EdgesY, 0, out hv_ColBegin, out hv_RowBegin, out hv_ColEnd, 
          out hv_RowEnd, out hv__, out hv__, out hv__, out hv__);
      ho_findLineRegion.Dispose();
      ho_findLineRegion = new HObject(ho_EmptyObject);
    }


    ho_lineRegion.Dispose();
    GenLineRegion(out ho_lineRegion, hv_ColBegin, hv_RowBegin, hv_ColEnd, hv_RowEnd, 
        hv_imageWidth, hv_imageHeight);
    //gen_contour_polygon_xld (lineRegion, [lineY1,lineY2], [lineX1,lineX2])
    ho_EmptyObject.Dispose();

    hv_MultipleLines.Dispose();
    hv_EdgesX.Dispose();
    hv_EdgesY.Dispose();
    hv_i.Dispose();
    hv_Xs.Dispose();
    hv_Ys.Dispose();
    hv_RowBegin.Dispose();
    hv_ColBegin.Dispose();
    hv_RowEnd.Dispose();
    hv_ColEnd.Dispose();
    hv_EdgesXStep.Dispose();
    hv_EdgesYStep.Dispose();
    hv__.Dispose();

    return;
  }

  public void VisionProStyleFindLineOneStep_Pairs (HObject ho_inputImage, out HObject ho_findLineRegion, 
      out HObject ho_lineRegion, HTuple hv_row, HTuple hv_col, HTuple hv_radian, HTuple hv_len1, 
      HTuple hv_len2, HTuple hv_transition, HTuple hv_numSubRects, HTuple hv_threshold, 
      HTuple hv_sigma, HTuple hv_firstOrLast, HTuple hv_isVertical, HTuple hv_ignoreFraction, 
      HTuple hv_whichEdgePair, HTuple hv_minEdge, HTuple hv_maxEdge, HTuple hv_imageWidth, 
      HTuple hv_imageHeight, out HTuple hv_XsUsed, out HTuple hv_YsUsed, out HTuple hv_XsIgnored, 
      out HTuple hv_YsIgnored, out HTuple hv_lineX1, out HTuple hv_lineY1, out HTuple hv_lineX2, 
      out HTuple hv_lineY2)
  {



    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_findLineRegion);
    HOperatorSet.GenEmptyObj(out ho_lineRegion);
    hv_XsUsed = new HTuple();
    hv_YsUsed = new HTuple();
    hv_XsIgnored = new HTuple();
    hv_YsIgnored = new HTuple();
    hv_lineX1 = new HTuple();
    hv_lineY1 = new HTuple();
    hv_lineX2 = new HTuple();
    hv_lineY2 = new HTuple();
    ho_findLineRegion.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();
    VisionProStyleFindLine(ho_inputImage, out ho_findLineRegion, hv_transition, hv_row, 
        hv_col, hv_radian, hv_len1, hv_len2, hv_numSubRects, hv_threshold, hv_sigma, 
        hv_firstOrLast, "true", hv_whichEdgePair, hv_minEdge, hv_maxEdge, out hv_XsUsed, 
        out hv_YsUsed);


    if ((int)(new HTuple(hv_isVertical.TupleEqual("true"))) != 0)
    {
      hv_lineY1.Dispose();hv_lineX1.Dispose();hv_lineY2.Dispose();hv_lineX2.Dispose();
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;hv_YsIgnored.Dispose();hv_XsIgnored.Dispose();
      FitLine2D(hv_YsUsed, hv_XsUsed, hv_ignoreFraction, out hv_lineY1, out hv_lineX1, 
          out hv_lineY2, out hv_lineX2, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out hv_YsIgnored, 
          out hv_XsIgnored);
      hv_YsUsed.Dispose();
      hv_YsUsed = ExpTmpOutVar_0;
      hv_XsUsed.Dispose();
      hv_XsUsed = ExpTmpOutVar_1;
      }
    }
    else
    {
      hv_lineX1.Dispose();hv_lineY1.Dispose();hv_lineX2.Dispose();hv_lineY2.Dispose();
      {
      HTuple ExpTmpOutVar_0;HTuple ExpTmpOutVar_1;hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
      FitLine2D(hv_XsUsed, hv_YsUsed, hv_ignoreFraction, out hv_lineX1, out hv_lineY1, 
          out hv_lineX2, out hv_lineY2, out ExpTmpOutVar_0, out ExpTmpOutVar_1, out hv_XsIgnored, 
          out hv_YsIgnored);
      hv_XsUsed.Dispose();
      hv_XsUsed = ExpTmpOutVar_0;
      hv_YsUsed.Dispose();
      hv_YsUsed = ExpTmpOutVar_1;
      }
    }

    ho_lineRegion.Dispose();
    GenLineRegion(out ho_lineRegion, hv_lineX1, hv_lineY1, hv_lineX2, hv_lineY2, 
        hv_imageWidth, hv_imageHeight);


    return;
  }

  // Main procedure 
  private void action()
  {


    // Local iconic variables 

    HObject ho_Image, ho_ROI_0, ho_ImageReduced;
    HObject ho_Edges, ho_findLineRegionTop, ho_lineRegionTop;
    HObject ho_findLineRegionLeft, ho_lineRegionLeft, ho_FindLineRegions;

    // Local control variables 

    HTuple hv_Width = new HTuple(), hv_Height = new HTuple();
    HTuple hv_ModelID = new HTuple(), hv_YCoeff = new HTuple();
    HTuple hv_XCoeff = new HTuple(), hv_FAI21_P1_LEN = new HTuple();
    HTuple hv_FAI21_P2_LEN = new HTuple(), hv_FAI21_P3_LEN = new HTuple();
    HTuple hv_PointsXUsed = new HTuple(), hv_PointsYUsed = new HTuple();
    HTuple hv_PointsXIgnored = new HTuple(), hv_PointsYIgnored = new HTuple();
    HTuple hv_Outputs = new HTuple(), hv_OutputsPixel = new HTuple();
    HTuple hv_Threshold = new HTuple(), hv_MapToWorld = new HTuple();
    HTuple hv_MapToImage = new HTuple(), hv_row1TopBase = new HTuple();
    HTuple hv_col1TopBase = new HTuple(), hv_radianTopBase = new HTuple();
    HTuple hv_len1TopBase = new HTuple(), hv_len2TopBase = new HTuple();
    HTuple hv_lineX1TopBase = new HTuple(), hv_lineY1TopBase = new HTuple();
    HTuple hv_lineX2TopBase = new HTuple(), hv_lineY2TopBase = new HTuple();
    HTuple hv_XsUsed = new HTuple(), hv_YsUsed = new HTuple();
    HTuple hv_XsIgnored = new HTuple(), hv_YsIgnored = new HTuple();
    HTuple hv_row1LeftBaseUpper = new HTuple(), hv_col1LeftBaseUpper = new HTuple();
    HTuple hv_radianLeftBaseUpper = new HTuple(), hv_len1LeftBaseUpper = new HTuple();
    HTuple hv_len2LeftBaseUpper = new HTuple(), hv_row1LeftBaseLower = new HTuple();
    HTuple hv_col1LeftBaseLower = new HTuple(), hv_radianLeftBaseLower = new HTuple();
    HTuple hv_len1LeftBaseLower = new HTuple(), hv_len2LeftBaseLower = new HTuple();
    HTuple hv_row1LeftBase = new HTuple(), hv_col1LeftBase = new HTuple();
    HTuple hv_radianLeftBase = new HTuple(), hv_len1LeftBase = new HTuple();
    HTuple hv_len2LeftBase = new HTuple(), hv_LineX1LeftBase = new HTuple();
    HTuple hv_lineYLeftBase = new HTuple(), hv_lineX2LeftBase = new HTuple();
    HTuple hv_lineY2LeftBase = new HTuple(), hv_X1_FAI21_LINE_H_P1 = new HTuple();
    HTuple hv_Y2_FAI21_LINE_H_P1 = new HTuple(), hv_X2_FAI21_LINE_H_P1 = new HTuple();
    HTuple hv_X1_FAI21_LINE_H_P2 = new HTuple(), hv_Y2_FAI21_LINE_H_P2 = new HTuple();
    HTuple hv_X2_FAI21_LINE_H_P2 = new HTuple(), hv_X1_FAI21_LINE_H_P3 = new HTuple();
    HTuple hv_Y2_FAI21_LINE_H_P3 = new HTuple(), hv_X2_FAI21_LINE_H_P3 = new HTuple();
    // Initialize local and output iconic variables 
    HOperatorSet.GenEmptyObj(out ho_Image);
    HOperatorSet.GenEmptyObj(out ho_ROI_0);
    HOperatorSet.GenEmptyObj(out ho_ImageReduced);
    HOperatorSet.GenEmptyObj(out ho_Edges);
    HOperatorSet.GenEmptyObj(out ho_findLineRegionTop);
    HOperatorSet.GenEmptyObj(out ho_lineRegionTop);
    HOperatorSet.GenEmptyObj(out ho_findLineRegionLeft);
    HOperatorSet.GenEmptyObj(out ho_lineRegionLeft);
    HOperatorSet.GenEmptyObj(out ho_FindLineRegions);
    ho_Image.Dispose();
    HOperatorSet.ReadImage(out ho_Image, "E:/Projects/3d/I94/modelBottom.bmp");
    hv_Width.Dispose();hv_Height.Dispose();
    HOperatorSet.GetImageSize(ho_Image, out hv_Width, out hv_Height);

    HOperatorSet.SetDraw(hv_ExpDefaultWinHandle, "margin");


    //Find model
    ho_ROI_0.Dispose();
    HOperatorSet.GenRectangle1(out ho_ROI_0, 1200.43, 1756.77, 2448.87, 3179.69);
    ho_ImageReduced.Dispose();
    HOperatorSet.ReduceDomain(ho_Image, ho_ROI_0, out ho_ImageReduced);
    ho_Edges.Dispose();
    HOperatorSet.EdgesSubPix(ho_ImageReduced, out ho_Edges, "canny", 1, 20, 40);
    hv_ModelID.Dispose();
    HOperatorSet.ReadShapeModel("E:/Projects/3d/Hdevs/model_bottom", out hv_ModelID);

    //Global variables
    hv_YCoeff.Dispose();
    hv_YCoeff = 0.0076;
    hv_XCoeff.Dispose();
    hv_XCoeff = 0.0076;

    hv_FAI21_P1_LEN.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI21_P1_LEN = 20.362*hv_YCoeff;
    }
    hv_FAI21_P2_LEN.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI21_P2_LEN = 25.362*hv_YCoeff;
    }
    hv_FAI21_P3_LEN.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_FAI21_P3_LEN = 30.362*hv_YCoeff;
    }


    hv_PointsXUsed.Dispose();
    hv_PointsXUsed = new HTuple();
    hv_PointsYUsed.Dispose();
    hv_PointsYUsed = new HTuple();
    hv_PointsXIgnored.Dispose();
    hv_PointsXIgnored = new HTuple();
    hv_PointsYIgnored.Dispose();
    hv_PointsYIgnored = new HTuple();

    hv_Outputs.Dispose();
    hv_Outputs = new HTuple();
    hv_OutputsPixel.Dispose();
    hv_OutputsPixel = new HTuple();

    hv_Threshold.Dispose();
    hv_Threshold = 20;
    hv_MapToWorld.Dispose();
    hv_MapToWorld = 0;
    hv_MapToImage.Dispose();
    hv_MapToImage = 0;


    //Find top base line
    hv_row1TopBase.Dispose();
    hv_row1TopBase = 170.01200000;
    hv_col1TopBase.Dispose();
    hv_col1TopBase = 2489.98000000;
    hv_radianTopBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_radianTopBase = (new HTuple(-89.02100000)).TupleRad()
        ;
    }
    hv_len1TopBase.Dispose();
    hv_len1TopBase = 131.49100000;
    hv_len2TopBase.Dispose();
    hv_len2TopBase = 163.67100000;

    ho_findLineRegionTop.Dispose();ho_lineRegionTop.Dispose();hv_lineX1TopBase.Dispose();hv_lineY1TopBase.Dispose();hv_lineX2TopBase.Dispose();hv_lineY2TopBase.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_findLineRegionTop, out ho_lineRegionTop, 
        "positive", hv_row1TopBase, hv_col1TopBase, hv_radianTopBase, hv_len1TopBase, 
        hv_len2TopBase, 10, hv_Threshold, "first", 0.3, "false", 1, 5120, 5120, 5, 
        out hv_lineX1TopBase, out hv_lineY1TopBase, out hv_lineX2TopBase, out hv_lineY2TopBase, 
        out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsXUsed = hv_PointsXUsed.TupleConcat(
        hv_XsUsed);
    hv_PointsXUsed.Dispose();
    hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsYUsed = hv_PointsYUsed.TupleConcat(
        hv_YsUsed);
    hv_PointsYUsed.Dispose();
    hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsXIgnored = hv_PointsXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_PointsXIgnored.Dispose();
    hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsYIgnored = hv_PointsYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_PointsYIgnored.Dispose();
    hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
    }
    }


    //Find left base line
    hv_row1LeftBaseUpper.Dispose();
    hv_row1LeftBaseUpper = 2668.53000000;
    hv_col1LeftBaseUpper.Dispose();
    hv_col1LeftBaseUpper = 1378.41000000;
    hv_radianLeftBaseUpper.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_radianLeftBaseUpper = (new HTuple(0)).TupleRad()
        ;
    }
    hv_len1LeftBaseUpper.Dispose();
    hv_len1LeftBaseUpper = 215.68300000;
    hv_len2LeftBaseUpper.Dispose();
    hv_len2LeftBaseUpper = 319.99800000;

    hv_row1LeftBaseLower.Dispose();
    hv_row1LeftBaseLower = 4205.05000000;
    hv_col1LeftBaseLower.Dispose();
    hv_col1LeftBaseLower = 1379.89000000;
    hv_radianLeftBaseLower.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_radianLeftBaseLower = (new HTuple(0)).TupleRad()
        ;
    }
    hv_len1LeftBaseLower.Dispose();
    hv_len1LeftBaseLower = 140.49600000;
    hv_len2LeftBaseLower.Dispose();
    hv_len2LeftBaseLower = 316.45100000;

    hv_row1LeftBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_row1LeftBase = new HTuple();
    hv_row1LeftBase = hv_row1LeftBase.TupleConcat(hv_row1LeftBaseUpper, hv_row1LeftBaseLower);
    }
    hv_col1LeftBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_col1LeftBase = new HTuple();
    hv_col1LeftBase = hv_col1LeftBase.TupleConcat(hv_col1LeftBaseUpper, hv_col1LeftBaseLower);
    }
    hv_radianLeftBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_radianLeftBase = new HTuple();
    hv_radianLeftBase = hv_radianLeftBase.TupleConcat(hv_radianLeftBaseUpper, hv_radianLeftBaseLower);
    }
    hv_len1LeftBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_len1LeftBase = new HTuple();
    hv_len1LeftBase = hv_len1LeftBase.TupleConcat(hv_len1LeftBaseUpper, hv_len1LeftBaseLower);
    }
    hv_len2LeftBase.Dispose();
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    hv_len2LeftBase = new HTuple();
    hv_len2LeftBase = hv_len2LeftBase.TupleConcat(hv_len2LeftBaseUpper, hv_len2LeftBaseLower);
    }

    ho_findLineRegionLeft.Dispose();ho_lineRegionLeft.Dispose();hv_LineX1LeftBase.Dispose();hv_lineYLeftBase.Dispose();hv_lineX2LeftBase.Dispose();hv_lineY2LeftBase.Dispose();hv_XsUsed.Dispose();hv_YsUsed.Dispose();hv_XsIgnored.Dispose();hv_YsIgnored.Dispose();
    VisionProStyleFindLineOneStep(ho_Image, out ho_findLineRegionLeft, out ho_lineRegionLeft, 
        "positive", hv_row1LeftBase, hv_col1LeftBase, hv_radianLeftBase, hv_len1LeftBase, 
        hv_len2LeftBase, 10, hv_Threshold, "first", 0.2, "true", 1, 5120, 5120, 5, 
        out hv_LineX1LeftBase, out hv_lineYLeftBase, out hv_lineX2LeftBase, out hv_lineY2LeftBase, 
        out hv_XsUsed, out hv_YsUsed, out hv_XsIgnored, out hv_YsIgnored);
    ho_FindLineRegions.Dispose();
    HOperatorSet.ConcatObj(ho_findLineRegionTop, ho_findLineRegionLeft, out ho_FindLineRegions
        );
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsXUsed = hv_PointsXUsed.TupleConcat(
        hv_XsUsed);
    hv_PointsXUsed.Dispose();
    hv_PointsXUsed = ExpTmpLocalVar_PointsXUsed;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsYUsed = hv_PointsYUsed.TupleConcat(
        hv_YsUsed);
    hv_PointsYUsed.Dispose();
    hv_PointsYUsed = ExpTmpLocalVar_PointsYUsed;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsXIgnored = hv_PointsXIgnored.TupleConcat(
        hv_XsIgnored);
    hv_PointsXIgnored.Dispose();
    hv_PointsXIgnored = ExpTmpLocalVar_PointsXIgnored;
    }
    }
    using (HDevDisposeHelper dh = new HDevDisposeHelper())
    {
    {
    HTuple 
      ExpTmpLocalVar_PointsYIgnored = hv_PointsYIgnored.TupleConcat(
        hv_YsIgnored);
    hv_PointsYIgnored.Dispose();
    hv_PointsYIgnored = ExpTmpLocalVar_PointsYIgnored;
    }
    }

    //******************************FAI21*******************************


    hv_X1_FAI21_LINE_H_P1.Dispose();hv_Y2_FAI21_LINE_H_P1.Dispose();hv_X2_FAI21_LINE_H_P1.Dispose();hv_Y2_FAI21_LINE_H_P1.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI21_P1_LEN, hv_MapToWorld, hv_MapToImage, 
        "false", out hv_X1_FAI21_LINE_H_P1, out hv_Y2_FAI21_LINE_H_P1, out hv_X2_FAI21_LINE_H_P1, 
        out hv_Y2_FAI21_LINE_H_P1);
    hv_X1_FAI21_LINE_H_P2.Dispose();hv_Y2_FAI21_LINE_H_P2.Dispose();hv_X2_FAI21_LINE_H_P2.Dispose();hv_Y2_FAI21_LINE_H_P2.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI21_P2_LEN, hv_MapToWorld, hv_MapToImage, 
        "false", out hv_X1_FAI21_LINE_H_P2, out hv_Y2_FAI21_LINE_H_P2, out hv_X2_FAI21_LINE_H_P2, 
        out hv_Y2_FAI21_LINE_H_P2);
    hv_X1_FAI21_LINE_H_P3.Dispose();hv_Y2_FAI21_LINE_H_P3.Dispose();hv_X2_FAI21_LINE_H_P3.Dispose();hv_Y2_FAI21_LINE_H_P3.Dispose();
    TranslateLineInWorldCoordinateAndConvertBack(hv_lineX1TopBase, hv_lineY1TopBase, 
        hv_lineX2TopBase, hv_lineY2TopBase, hv_FAI21_P3_LEN, hv_MapToWorld, hv_MapToImage, 
        "false", out hv_X1_FAI21_LINE_H_P3, out hv_Y2_FAI21_LINE_H_P3, out hv_X2_FAI21_LINE_H_P3, 
        out hv_Y2_FAI21_LINE_H_P3);


    ho_Image.Dispose();
    ho_ROI_0.Dispose();
    ho_ImageReduced.Dispose();
    ho_Edges.Dispose();
    ho_findLineRegionTop.Dispose();
    ho_lineRegionTop.Dispose();
    ho_findLineRegionLeft.Dispose();
    ho_lineRegionLeft.Dispose();
    ho_FindLineRegions.Dispose();

    hv_Width.Dispose();
    hv_Height.Dispose();
    hv_ModelID.Dispose();
    hv_YCoeff.Dispose();
    hv_XCoeff.Dispose();
    hv_FAI21_P1_LEN.Dispose();
    hv_FAI21_P2_LEN.Dispose();
    hv_FAI21_P3_LEN.Dispose();
    hv_PointsXUsed.Dispose();
    hv_PointsYUsed.Dispose();
    hv_PointsXIgnored.Dispose();
    hv_PointsYIgnored.Dispose();
    hv_Outputs.Dispose();
    hv_OutputsPixel.Dispose();
    hv_Threshold.Dispose();
    hv_MapToWorld.Dispose();
    hv_MapToImage.Dispose();
    hv_row1TopBase.Dispose();
    hv_col1TopBase.Dispose();
    hv_radianTopBase.Dispose();
    hv_len1TopBase.Dispose();
    hv_len2TopBase.Dispose();
    hv_lineX1TopBase.Dispose();
    hv_lineY1TopBase.Dispose();
    hv_lineX2TopBase.Dispose();
    hv_lineY2TopBase.Dispose();
    hv_XsUsed.Dispose();
    hv_YsUsed.Dispose();
    hv_XsIgnored.Dispose();
    hv_YsIgnored.Dispose();
    hv_row1LeftBaseUpper.Dispose();
    hv_col1LeftBaseUpper.Dispose();
    hv_radianLeftBaseUpper.Dispose();
    hv_len1LeftBaseUpper.Dispose();
    hv_len2LeftBaseUpper.Dispose();
    hv_row1LeftBaseLower.Dispose();
    hv_col1LeftBaseLower.Dispose();
    hv_radianLeftBaseLower.Dispose();
    hv_len1LeftBaseLower.Dispose();
    hv_len2LeftBaseLower.Dispose();
    hv_row1LeftBase.Dispose();
    hv_col1LeftBase.Dispose();
    hv_radianLeftBase.Dispose();
    hv_len1LeftBase.Dispose();
    hv_len2LeftBase.Dispose();
    hv_LineX1LeftBase.Dispose();
    hv_lineYLeftBase.Dispose();
    hv_lineX2LeftBase.Dispose();
    hv_lineY2LeftBase.Dispose();
    hv_X1_FAI21_LINE_H_P1.Dispose();
    hv_Y2_FAI21_LINE_H_P1.Dispose();
    hv_X2_FAI21_LINE_H_P1.Dispose();
    hv_X1_FAI21_LINE_H_P2.Dispose();
    hv_Y2_FAI21_LINE_H_P2.Dispose();
    hv_X2_FAI21_LINE_H_P2.Dispose();
    hv_X1_FAI21_LINE_H_P3.Dispose();
    hv_Y2_FAI21_LINE_H_P3.Dispose();
    hv_X2_FAI21_LINE_H_P3.Dispose();

  }

  public void InitHalcon()
  {
    // Default settings used in HDevelop
    HOperatorSet.SetSystem("width", 512);
    HOperatorSet.SetSystem("height", 512);
  }

  public void RunHalcon(HTuple Window)
  {
    hv_ExpDefaultWinHandle = Window;
    action();
  }

}

